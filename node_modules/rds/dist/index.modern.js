import React, { useContext, useState, useEffect, useRef } from 'react';
import styled, { ThemeContext } from 'styled-components';
import { Link } from 'react-router-dom';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

var TypographyTypes = Object.freeze({
  H1: 'H1',
  H2: 'H2',
  H3: 'H3',
  H4: 'H4',
  P: 'P'
});
var Icons = Object.freeze({
  ADD: 'ADD',
  APPLICATION: 'APPLICATION',
  ARROW: 'ARROW',
  BASKET: 'BASKET',
  BIN: 'BIN',
  BLOCKS: 'BLOCKS',
  CART: 'CART',
  CATEGORY: 'CATEGORY',
  CLOCK: 'CLOCK',
  CONTACT: 'CONTACT',
  DUEDATE: 'DUEDATE',
  EDIT: 'EDIT',
  EMPTY: 'EMPTY',
  GMAIL: 'GMAIL',
  GOOGLEDRIVE: 'GOOGLEDRIVE',
  GRAPH: 'GRAPH',
  GRID: 'GRID',
  HASHTAG: 'HASHTAG',
  HEART: 'HEART',
  KEY: 'KEY',
  LARGEBLOCKS: 'LARGEBLOCKS',
  LIST: 'LIST',
  NOTE: 'NOTE',
  PHONE: 'PHONE',
  PICTURE: 'PICTURE',
  PIN: 'PIN',
  PRODUCT: 'PRODUCT',
  RESTORE: 'RESTORE',
  REPORT: 'REPORT',
  SALE: 'SALE',
  SAVE: 'SAVE',
  SEARCH: 'SEARCH',
  SETTINGS: 'SETTINGS',
  SIGNOUT: 'SIGNOUT',
  SQUARE: 'SQUARE',
  STAR: 'STAR',
  STOCKMANAGER: 'STOCKMANAGER',
  SUCCESS: 'SUCCESS',
  USER: 'USER',
  USERPICTURE: 'USERPICTURE',
  VIEW: 'VIEW',
  WARNING: 'WARNING'
});
var ToastTypes = Object.freeze({
  SUCCESS: 'success',
  WARNING: 'warning',
  INFO: 'info',
  ERROR: 'error'
});
var ThemeVariants = Object.freeze({
  MAIN: 'main',
  SECONDARY: 'secondary',
  SECONDARY_LIGHT: 'secondary-light',
  ERROR: 'error',
  WHITE: 'white',
  DARK: 'dark',
  WARNING: 'warning',
  GRAY: 'gray',
  GLOSSY: 'glossy'
});
var ButtonVariants = Object.freeze({
  ADD: 'add',
  ACCEPT: 'accept',
  BLUE: 'blue',
  DARK: 'dark',
  DANGER: 'danger',
  DANGER_SECONDARY: 'danger_secondary',
  DELETE: 'delete',
  EDIT: 'edit',
  FAVORITE: 'favorite',
  PICTURE: 'picture',
  GOOGLE_DRIVE: 'googleDrive',
  RESTORE: 'restore',
  SETTINGS: 'settings',
  MAIN: 'main',
  SAVE: 'save',
  TRANSPARENT: 'transparent',
  VIEW: 'view',
  KEY: 'key',
  WARNING: 'warning'
});
var TagVariants = Object.freeze({
  RED: 'RED',
  WARNING: 'WARNING',
  TRANSPARENT: 'TRANSPARENT',
  DARK: 'DARK',
  GREEN: 'GREEN',
  PURPLE: 'PURPLE'
});
var ThemesNames = Object.freeze({
  LIGHT: 'THEME_LIGHT',
  DARK: 'THEME_DARK'
});
var Themes = [{
  id: ThemesNames.LIGHT,
  name: ThemesNames.LIGHT,
  label: 'Claro'
}, {
  id: ThemesNames.DARK,
  name: ThemesNames.DARK,
  label: 'Oscuro'
}];
var HeaderSizes = Object.freeze({
  XSMALL: 'XSMALL',
  SMALL: 'SMALL',
  MEDIUM: 'MEDIUM',
  BIG: 'BIG'
});
var FormItemTypes = Object.freeze({
  SELECT: 'select',
  CARD_SELECT: 'card_select',
  TEXT: 'text',
  PASSWORD: 'password',
  TEXTAREA: 'textarea',
  MULTI_SELECT: 'MULTI_SELECT',
  NUMBER: 'number',
  EMAIL: 'email',
  FILES_PICKER: 'FILES_PICKER',
  DRIVE_ATTACHMENT: 'DRIVE_ATTACHMENT',
  DATE_PICKER: 'DATE_PICKER',
  ITEM_BROWSER: 'ITEM_BROWSER',
  CHECKBOX: 'CHECKBOX'
});
var FormSectionSizes = Object.freeze({
  SMALL: 'SMALL',
  MEDIUM: 'MEDIUM',
  BIG: 'BIG'
});
var FormItemSizes = Object.freeze({
  SMALL: 'SMALL',
  MEDIUM: 'MEDIUM',
  BIG: 'BIG'
});
var EmojiTypes = Object.freeze({
  ALERT: "\uD83D\uDEA8",
  PAID: "\uD83D\uDCB0",
  DELIVERED: "\uD83D\uDE9A",
  CALENDAR: "\uD83D\uDCC5",
  CONFETTI: "\uD83C\uDF89",
  WARNING: "\u26A0\uFE0F"
});

var Add = function Add(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 44 44"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M22,0C9.8,0,0,9.8,0,22s9.8,22,22,22s22-9.8,22-22S34.2,0,22,0z M34,23c0,0.6-0.4,1-1,1h-8.5c-0.3,0-0.5,0.2-0.5,0.5V33  c0,0.6-0.4,1-1,1h-2c-0.6,0-1-0.4-1-1v-8.5c0-0.3-0.2-0.5-0.5-0.5H11c-0.6,0-1-0.4-1-1v-2c0-0.6,0.4-1,1-1h8.5  c0.3,0,0.5-0.2,0.5-0.5V11c0-0.6,0.4-1,1-1h2c0.6,0,1,0.4,1,1v8.5c0,0.3,0.2,0.5,0.5,0.5H33c0.6,0,1,0.4,1,1V23z"
  }));
};

var Application = function Application(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 45 45"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    d: "M11,6.5H6v5v22H0v-33h34v6H11z M34,11.5H11v22v11h34v-33H34z",
    fill: fillColor,
    stroke: fillColor
  })));
};

var Arrow = function Arrow(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 451.847 451.847",
    style: _extends({
      transform: 'rotate(90deg)'
    }, style)
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751   c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0   c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z"
  }));
};

var Basket = function Basket(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 487.1 487.1"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M342.3,137.978H385l-63.3-108.6c-5.1-8.8-16.4-11.8-25.2-6.6c-8.8,5.1-11.8,16.4-6.6,25.2L342.3,137.978z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M197.4,47.978c5.1-8.8,2.2-20.1-6.6-25.2s-20.1-2.2-25.2,6.6l-63.3,108.7H145L197.4,47.978z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M455.7,171.278H31.3c-17.3,0-31.3,14-31.3,31.3v34.7c0,17.3,14,31.3,31.3,31.3h9.8l30.2,163.7    c3.8,19.3,21.4,34.6,39.7,34.6h12h78.8c8,0,18.4,0,29,0l0,0h9.6h9.6l0,0c10.6,0,21,0,29,0h78.8h12c18.3,0,35.9-15.3,39.7-34.6    l30.4-163.8h15.9c17.3,0,31.3-14,31.3-31.3v-34.7C487,185.278,473,171.278,455.7,171.278z M172.8,334.878v70.6    c0,10.1-8.2,17.7-17.7,17.7c-10.1,0-17.7-8.2-17.7-17.7v-29.6v-69.4c0-10.1,8.2-17.7,17.7-17.7c10.1,0,17.7,8.2,17.7,17.7V334.878    z M229.6,334.878v70.6c0,10.1-8.2,17.7-17.7,17.7c-10.1,0-17.7-8.2-17.7-17.7v-29.6v-69.4c0-10.1,8.2-17.7,17.7-17.7    s17.7,8.2,17.7,17.7V334.878z M286.7,375.878v29.6c0,9.5-7.6,17.7-17.7,17.7c-9.5,0-17.7-7.6-17.7-17.7v-70.6v-28.4    c0-9.5,8.2-17.7,17.7-17.7s17.7,7.6,17.7,17.7V375.878z M343.5,375.878v29.6c0,9.5-7.6,17.7-17.7,17.7c-9.5,0-17.7-7.6-17.7-17.7    v-70.6v-28.4c0-9.5,7.6-17.7,17.7-17.7c9.5,0,17.7,7.6,17.7,17.7V375.878z"
  }))));
};

var Bin = function Bin(_ref) {
  var className = _ref.className,
      fillColor = _ref.fillColor,
      style = _ref.style,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 408.483 408.483",
    width: width
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M87.748,388.784c0.461,11.01,9.521,19.699,20.539,19.699h191.911c11.018,0,20.078-8.689,20.539-19.699l13.705-289.316    H74.043L87.748,388.784z M247.655,171.329c0-4.61,3.738-8.349,8.35-8.349h13.355c4.609,0,8.35,3.738,8.35,8.349v165.293    c0,4.611-3.738,8.349-8.35,8.349h-13.355c-4.61,0-8.35-3.736-8.35-8.349V171.329z M189.216,171.329    c0-4.61,3.738-8.349,8.349-8.349h13.355c4.609,0,8.349,3.738,8.349,8.349v165.293c0,4.611-3.737,8.349-8.349,8.349h-13.355    c-4.61,0-8.349-3.736-8.349-8.349V171.329L189.216,171.329z M130.775,171.329c0-4.61,3.738-8.349,8.349-8.349h13.356    c4.61,0,8.349,3.738,8.349,8.349v165.293c0,4.611-3.738,8.349-8.349,8.349h-13.356c-4.61,0-8.349-3.736-8.349-8.349V171.329z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M343.567,21.043h-88.535V4.305c0-2.377-1.927-4.305-4.305-4.305h-92.971c-2.377,0-4.304,1.928-4.304,4.305v16.737H64.916    c-7.125,0-12.9,5.776-12.9,12.901V74.47h304.451V33.944C356.467,26.819,350.692,21.043,343.567,21.043z"
  }));
};

var Blocks = function Blocks(_ref) {
  var fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 475.082 475.082",
    width: width
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M182.725,36.542H36.547c-9.9,0-18.464,3.619-25.697,10.854C3.617,54.62,0,63.192,0,73.087v109.636    c0,9.897,3.617,18.464,10.85,25.693c7.232,7.236,15.796,10.854,25.697,10.854h146.178c9.9,0,18.464-3.621,25.697-10.854    c7.233-7.229,10.85-15.796,10.85-25.693V73.087c0-9.895-3.617-18.464-10.85-25.692C201.189,40.158,192.622,36.542,182.725,36.542z    "
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M182.725,255.813H36.547c-9.9,0-18.464,3.621-25.697,10.852C3.617,273.896,0,282.462,0,292.358v109.636    c0,9.897,3.617,18.467,10.85,25.694c7.232,7.234,15.796,10.852,25.697,10.852h146.178c9.9,0,18.464-3.617,25.697-10.852    c7.233-7.228,10.85-15.797,10.85-25.694V292.358c0-9.896-3.617-18.462-10.85-25.693    C201.189,259.428,192.622,255.813,182.725,255.813z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M464.23,47.396c-7.225-7.238-15.797-10.854-25.694-10.854H292.355c-9.896,0-18.463,3.619-25.693,10.854    c-7.234,7.224-10.852,15.797-10.852,25.692v109.636c0,9.897,3.617,18.464,10.852,25.693c7.23,7.236,15.797,10.854,25.693,10.854    h146.181c9.897,0,18.47-3.621,25.694-10.854c7.234-7.229,10.852-15.796,10.852-25.693V73.087    C475.082,63.192,471.467,54.626,464.23,47.396z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M438.536,255.813H292.355c-9.896,0-18.463,3.621-25.693,10.852c-7.234,7.231-10.852,15.797-10.852,25.693v109.636    c0,9.897,3.617,18.467,10.852,25.694c7.23,7.234,15.797,10.852,25.693,10.852h146.181c9.897,0,18.47-3.617,25.694-10.852    c7.234-7.228,10.852-15.797,10.852-25.694V292.358c0-9.896-3.614-18.462-10.852-25.693    C457.005,259.428,448.44,255.813,438.536,255.813z"
  }))));
};

var Category = function Category(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 482 482"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("polygon", {
    fill: fillColor,
    stroke: fillColor,
    points: "279.8,244.8 258.2,257.3 258.2,482 452.7,369.7 452.7,145   "
  }), /*#__PURE__*/React.createElement("polygon", {
    fill: fillColor,
    stroke: fillColor,
    points: "315,43.3 240.2,0 40.3,115.4 115.2,158.7   "
  }), /*#__PURE__*/React.createElement("polygon", {
    fill: fillColor,
    stroke: fillColor,
    points: "440,115.4 353.8,66.3 154,181.7 165.4,187.6 240.2,230.8 314.6,187.9   "
  }), /*#__PURE__*/React.createElement("polygon", {
    fill: fillColor,
    stroke: fillColor,
    points: "138.9,264.3 103.1,245.9 103.1,188.7 29.3,146.2 29.3,369.3 222.4,480.8 222.4,257.7 138.9,209.6   "
  }))));
};

var Clock = function Clock(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    fill: fillColor,
    stroke: fillColor,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 299.995 299.995"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    d: "M149.995,0C67.156,0,0,67.158,0,149.995s67.156,150,149.995,150s150-67.163,150-150S232.834,0,149.995,0z     M214.842,178.524H151.25c-0.215,0-0.415-0.052-0.628-0.06c-0.213,0.01-0.412,0.06-0.628,0.06    c-5.729,0-10.374-4.645-10.374-10.374V62.249c0-5.729,4.645-10.374,10.374-10.374s10.374,4.645,10.374,10.374v95.527h54.47    c5.729,0,10.374,4.645,10.374,10.374C225.212,173.879,220.571,178.524,214.842,178.524z"
  }))));
};

var Contact = function Contact(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512",
    style: style
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M318.72,293.065c-12.87-7.03-27.63-11.02-43.32-11.02h-37.29c-16.13,0-31.27,4.22-44.38,11.61    c-27.57,15.52-46.19,45.07-46.19,78.96v27.94h218.43v-27.94C365.97,338.285,346.87,308.425,318.72,293.065z"
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M421.7,257.225h-31c-18.1,0-34.97,5.35-49.12,14.57c6.8,4.46,13.19,9.67,19.08,15.56c22.77,22.77,35.31,53.05,35.31,85.26    v13.14H512v-38.23C512,297.735,471.49,257.225,421.7,257.225z"
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M121.3,257.225h-31c-49.79,0-90.3,40.51-90.3,90.3v38.23h117.54v-13.14c0-32.21,12.55-62.49,35.32-85.26    c5.67-5.67,11.8-10.71,18.32-15.06C156.88,262.775,139.73,257.225,121.3,257.225z"
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M406.153,121.416c-0.159,0-0.324,0.001-0.484,0.003c-33.558,0.277-60.622,29.282-60.33,64.655    c0.291,35.205,27.565,63.652,60.906,63.652c0.16,0,0.324-0.001,0.484-0.003c16.455-0.136,31.81-7.068,43.238-19.521    c11.162-12.164,17.232-28.192,17.093-45.134C466.769,149.863,439.495,121.416,406.153,121.416z"
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M105.754,121.416c-0.159,0-0.324,0.001-0.484,0.003c-33.558,0.277-60.622,29.282-60.33,64.655    c0.29,35.205,27.565,63.652,60.906,63.652c0.16,0,0.324-0.001,0.484-0.003c16.454-0.136,31.81-7.068,43.238-19.521    c11.163-12.164,17.233-28.192,17.093-45.134C166.37,149.863,139.096,121.416,105.754,121.416z"
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M256.76,111.445c-38.69,0-70.16,33.25-70.16,74.13c0,29.54,16.44,55.1,40.17,67c9.1,4.57,19.27,7.12,29.99,7.12    c10.72,0,20.89-2.55,29.99-7.12c23.73-11.9,40.17-37.46,40.17-67C326.92,144.695,295.45,111.445,256.76,111.445z"
  }))));
};

var DueDate = function DueDate(_ref) {
  var width = _ref.width,
      style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M432,32h-32V16c0-8.844-7.156-16-16-16c-8.844,0-16,7.156-16,16v16h-64V16c0-8.844-7.156-16-16-16    c-8.844,0-16,7.156-16,16v16h-64V16c0-8.844-7.156-16-16-16s-16,7.156-16,16v16h-64V16c0-8.844-7.156-16-16-16S80,7.156,80,16v16    H48C21.532,32,0,53.532,0,80v384c0,8.844,7.156,16,16,16h264.377C265.011,457.098,256,429.591,256,400    c0-79.406,64.594-144,144-144c29.591,0,57.098,9.011,80,24.377V80C480,53.532,458.468,32,432,32z M112,416H80    c-8.844,0-16-7.156-16-16c0-8.844,7.156-16,16-16h32c8.844,0,16,7.156,16,16C128,408.844,120.844,416,112,416z M112,352H80    c-8.844,0-16-7.156-16-16c0-8.844,7.156-16,16-16h32c8.844,0,16,7.156,16,16C128,344.844,120.844,352,112,352z M112,288H80    c-8.844,0-16-7.156-16-16c0-8.844,7.156-16,16-16h32c8.844,0,16,7.156,16,16S120.844,288,112,288z M112,224H80    c-8.844,0-16-7.156-16-16s7.156-16,16-16h32c8.844,0,16,7.156,16,16S120.844,224,112,224z M208,416h-32c-8.844,0-16-7.156-16-16    c0-8.844,7.156-16,16-16h32c8.844,0,16,7.156,16,16C224,408.844,216.844,416,208,416z M208,352h-32c-8.844,0-16-7.156-16-16    c0-8.844,7.156-16,16-16h32c8.844,0,16,7.156,16,16C224,344.844,216.844,352,208,352z M208,288h-32c-8.844,0-16-7.156-16-16    c0-8.844,7.156-16,16-16h32c8.844,0,16,7.156,16,16S216.844,288,208,288z M208,224h-32c-8.844,0-16-7.156-16-16s7.156-16,16-16h32    c8.844,0,16,7.156,16,16S216.844,224,208,224z M304,288h-32c-8.844,0-16-7.156-16-16c0-8.844,7.156-16,16-16h32    c8.844,0,16,7.156,16,16S312.844,288,304,288z M304,224h-32c-8.844,0-16-7.156-16-16s7.156-16,16-16h32c8.844,0,16,7.156,16,16    S312.844,224,304,224z M400,224h-32c-8.844,0-16-7.156-16-16s7.156-16,16-16h32c8.844,0,16,7.156,16,16S408.844,224,400,224z     M448,128H32V80c0-8.828,7.172-16,16-16h32v16c0,8.844,7.156,16,16,16s16-7.156,16-16V64h64v16c0,8.844,7.156,16,16,16    s16-7.156,16-16V64h64v16c0,8.844,7.156,16,16,16c8.844,0,16-7.156,16-16V64h64v16c0,8.844,7.156,16,16,16c8.844,0,16-7.156,16-16    V64h32c8.828,0,16,7.172,16,16V128z"
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M400,288c-61.75,0-112,50.25-112,112s50.25,112,112,112s112-50.25,112-112S461.75,288,400,288z M464,416h-64    c-8.844,0-16-7.156-16-16v-64c0-8.844,7.156-16,16-16c8.844,0,16,7.156,16,16v48h48c8.844,0,16,7.156,16,16    C480,408.844,472.844,416,464,416z"
  }))));
};

var Edit = function Edit(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 300 300"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M149.996,0C67.157,0,0.001,67.161,0.001,149.997S67.157,300,149.996,300s150.003-67.163,150.003-150.003    S232.835,0,149.996,0z M221.302,107.945l-14.247,14.247l-29.001-28.999l-11.002,11.002l29.001,29.001l-71.132,71.126    l-28.999-28.996L84.92,186.328l28.999,28.999l-7.088,7.088l-0.135-0.135c-0.786,1.294-2.064,2.238-3.582,2.575l-27.043,6.03    c-0.405,0.091-0.817,0.135-1.224,0.135c-1.476,0-2.91-0.581-3.973-1.647c-1.364-1.359-1.932-3.322-1.512-5.203l6.027-27.035    c0.34-1.517,1.286-2.798,2.578-3.582l-0.137-0.137L192.3,78.941c1.678-1.675,4.404-1.675,6.082,0.005l22.922,22.917    C222.982,103.541,222.982,106.267,221.302,107.945z"
  }))));
};

var Empty = function Empty(_ref) {
  var fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width,
      style = _ref.style;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M512,288v192H0V288L128,32h256L512,288z M476.219,288l-112-224H147.781l-112,224H128c0,70.688,57.313,128,128,128   c70.688,0,128-57.312,128-128H476.219z"
  }));
};

var Gmail = function Gmail(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 510 510"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", {
    id: "gmail"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M459,51H51C22.95,51,0,73.95,0,102v306c0,28.05,22.95,51,51,51h408c28.05,0,51-22.95,51-51V102    C510,73.95,487.05,51,459,51z M459,408h-51V183.6l-153,96.9l-153-96.9V408H51V102h30.6L255,209.1L428.4,102H459V408z"
  }))));
};

var GoogleDrive = function GoogleDrive(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("polygon", {
    fill: fillColor,
    stroke: fillColor,
    points: "341.344,32 170.656,32 324.256,320 494.944,320   "
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("polygon", {
    fill: fillColor,
    stroke: fillColor,
    points: "151.904,64.832 0,330.656 85.344,480 234.304,219.328   "
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("polygon", {
    fill: fillColor,
    stroke: fillColor,
    points: "195.328,352 122.176,480 432,480 512,352   "
  }))));
};

var Graph = function Graph(_ref) {
  var fillColor = _ref.fillColor,
      style = _ref.style,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512",
    width: width
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "m76 240c12.101562 0 23.054688-4.855469 31.148438-12.652344l44.402343 22.199219c-.222656 1.808594-.550781 3.585937-.550781 5.453125 0 24.8125 20.1875 45 45 45s45-20.1875 45-45c0-6.925781-1.703125-13.410156-4.511719-19.277344l60.234375-60.234375c5.867188 2.808594 12.351563 4.511719 19.277344 4.511719 24.8125 0 45-20.1875 45-45 0-4.671875-.917969-9.089844-2.246094-13.328125l52.335938-39.242187c7.140625 4.769531 15.699218 7.570312 24.910156 7.570312 24.8125 0 45-20.1875 45-45s-20.1875-45-45-45-45 20.1875-45 45c0 4.671875.917969 9.089844 2.246094 13.328125l-52.335938 39.242187c-7.140625-4.769531-15.699218-7.570312-24.910156-7.570312-24.8125 0-45 20.1875-45 45 0 6.925781 1.703125 13.410156 4.511719 19.277344l-60.234375 60.234375c-5.867188-2.808594-12.351563-4.511719-19.277344-4.511719-12.101562 0-23.054688 4.855469-31.148438 12.652344l-44.402343-22.199219c.222656-1.808594.550781-3.585937.550781-5.453125 0-24.8125-20.1875-45-45-45s-45 20.1875-45 45 20.1875 45 45 45zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "m497 482h-16v-317c0-8.289062-6.710938-15-15-15h-60c-8.289062 0-15 6.710938-15 15v317h-30v-227c0-8.289062-6.710938-15-15-15h-60c-8.289062 0-15 6.710938-15 15v227h-30v-107c0-8.289062-6.710938-15-15-15h-60c-8.289062 0-15 6.710938-15 15v107h-30v-167c0-8.289062-6.710938-15-15-15h-60c-8.289062 0-15 6.710938-15 15v167h-16c-8.289062 0-15 6.710938-15 15s6.710938 15 15 15h482c8.289062 0 15-6.710938 15-15s-6.710938-15-15-15zm0 0"
  }));
};

var Grid = function Grid(_ref) {
  var fillColor = _ref.fillColor,
      className = _ref.className,
      style = _ref.style,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m0 0h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m373.5 0h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m186.75 0h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m0 186.75h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m373.5 186.75h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m186.75 186.75h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m0 373.5h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m373.5 373.5h138.5v138.5h-138.5zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m186.75 373.5h138.5v138.5h-138.5zm0 0"
  }));
};

var Hashtag = function Hashtag(_ref) {
  var width = _ref.width,
      style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: _extends({}, style, {
      strokeWidth: '30px'
    }),
    width: width,
    viewBox: "0 -21 469.33333 469",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m448 106.839844h-64.8125l21.398438-79.808594c3.050781-11.371094-3.691407-23.082031-15.082032-26.132812-11.390625-3.050782-23.105468 3.710937-26.132812 15.082031l-24.339844 90.859375h-151.511719l21.398438-79.808594c3.050781-11.371094-3.691407-23.082031-15.082031-26.132812-11.394532-3.027344-23.082032 3.710937-26.113282 15.082031l-24.363281 90.859375h-79.359375c-11.777344 0-21.332031 9.535156-21.332031 21.332031 0 11.800781 9.554687 21.335937 21.332031 21.335937h67.902344l-34.324219 128h-76.246094c-11.773437 0-21.332031 9.535157-21.332031 21.332032s9.558594 21.332031 21.332031 21.332031h64.8125l-21.398437 79.808594c-3.050782 11.371093 3.691406 23.082031 15.082031 26.132812 1.835937.492188 3.691406.726563 5.503906.726563 9.410157 0 18.050781-6.273438 20.589844-15.808594l24.382813-90.859375h151.507812l-21.398438 79.808594c-3.046874 11.371093 3.691407 23.082031 15.085938 26.132812 1.832031.492188 3.6875.726563 5.523438.726563 9.410156 0 18.046874-6.273438 20.585937-15.808594l24.363281-90.859375h79.359375c11.777344 0 21.335938-9.535156 21.335938-21.332031s-9.558594-21.332032-21.335938-21.332032h-67.902343l34.324218-128h76.246094c11.777344 0 21.332031-9.535156 21.332031-21.335937 0-11.796875-9.554687-21.332031-21.332031-21.332031zm-154.753906 170.667968h-151.507813l34.324219-128h151.511719zm0 0"
  }));
};

var Heart = function Heart(_ref) {
  var width = _ref.width,
      style = _ref.style,
      filled = _ref.filled,
      fillColor = _ref.fillColor,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 23.217 23.217",
    width: width,
    style: style,
    className: (className || '') + " " + (filled ? 'fill_main' : '')
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    style: {
      transform: 'scale(.65)',
      transformOrigin: 'center',
      fill: "" + (filled ? fillColor : 'transparent'),
      stroke: fillColor,
      strokeWidth: '2px'
    },
    d: "M11.608,21.997c-22.647-12.354-6.268-27.713,0-17.369C17.877-5.716,34.257,9.643,11.608,21.997z"
  })));
};

var Key = function Key(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 455 455"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M416.296,38.642c-51.523-51.523-135.058-51.523-186.581,0c-41.222,41.222-49.457,102.934-24.718,152.35L0.183,395.811  l-0.122,59.059L114.593,455v-55.705h55.705l0-55.705h55.705l0-55.705l37.943-37.943c49.416,24.74,111.128,16.504,152.35-24.718  C467.82,173.701,467.82,90.165,416.296,38.642z M374.355,137.001c-15.579,15.579-40.838,15.579-56.418,0s-15.579-40.838,0-56.418  s40.838-15.579,56.418,0C389.935,96.163,389.935,121.422,374.355,137.001z"
  }));
};

var LargeBlocks = function LargeBlocks(_ref) {
  var className = _ref.className,
      fillColor = _ref.fillColor,
      width = _ref.width,
      style = _ref.style;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24"
  }, /*#__PURE__*/React.createElement("g", {
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M24,3c0-0.6-0.4-1-1-1H1C0.4,2,0,2.4,0,3v2c0,0.6,0.4,1,1,1h22c0.6,0,1-0.4,1-1V3z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M24,11c0-0.6-0.4-1-1-1H1c-0.6,0-1,0.4-1,1v2c0,0.6,0.4,1,1,1h22c0.6,0,1-0.4,1-1V11z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M24,19c0-0.6-0.4-1-1-1H1c-0.6,0-1,0.4-1,1v2c0,0.6,0.4,1,1,1h22c0.6,0,1-0.4,1-1V19z"
  })));
};

var List = function List(_ref) {
  var fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 60.123 60.123",
    width: width
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M57.124,51.893H16.92c-1.657,0-3-1.343-3-3s1.343-3,3-3h40.203c1.657,0,3,1.343,3,3S58.781,51.893,57.124,51.893z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M57.124,33.062H16.92c-1.657,0-3-1.343-3-3s1.343-3,3-3h40.203c1.657,0,3,1.343,3,3   C60.124,31.719,58.781,33.062,57.124,33.062z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M57.124,14.231H16.92c-1.657,0-3-1.343-3-3s1.343-3,3-3h40.203c1.657,0,3,1.343,3,3S58.781,14.231,57.124,14.231z"
  }), /*#__PURE__*/React.createElement("circle", {
    fill: fillColor,
    stroke: fillColor,
    cx: "4.029",
    cy: "11.463",
    r: "4.029"
  }), /*#__PURE__*/React.createElement("circle", {
    fill: fillColor,
    stroke: fillColor,
    cx: "4.029",
    cy: "30.062",
    r: "4.029"
  }), /*#__PURE__*/React.createElement("circle", {
    fill: fillColor,
    stroke: fillColor,
    cx: "4.029",
    cy: "48.661",
    r: "4.029"
  })));
};

var Note = function Note(_ref) {
  var width = _ref.width,
      style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    "enable-background": "new 0 0 512 512",
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "m.228 366.926c-.69 3.917.203 7.949 2.485 11.208 2.281 3.259 5.765 5.478 9.683 6.168l66.577 11.739-41.939-237.852z"
  }), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "m80.199.242c-3.927-.713-7.979.167-11.256 2.447-3.276 2.281-5.509 5.774-6.202 9.706l-15.908 90.22 302.673-53.37z"
  }))), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "m511.773 431.882-62.514-354.531c-1.438-8.158-9.215-13.602-17.377-12.167l-354.53 62.513c-8.158 1.438-13.606 9.218-12.168 17.376l62.513 354.531c.691 3.918 2.91 7.401 6.169 9.683 2.539 1.778 5.546 2.713 8.604 2.713.867 0 1.739-.075 2.604-.228l354.531-62.513c3.918-.69 7.401-2.91 9.683-6.168 2.282-3.259 3.175-7.291 2.485-11.209zm-366.663-179.05c-1.438-8.158 4.01-15.938 12.168-17.376l236.355-41.676c8.165-1.438 15.939 4.009 17.377 12.167s-4.01 15.938-12.168 17.376l-236.355 41.677c-.881.155-1.758.23-2.622.23-7.143 0-13.472-5.12-14.755-12.398zm195.784 102.561-157.569 27.784c-.881.155-1.758.23-2.622.23-7.143 0-13.472-5.12-14.755-12.398-1.438-8.158 4.01-15.938 12.168-17.376l157.569-27.784c8.164-1.439 15.938 4.009 17.377 12.167 1.438 8.158-4.01 15.938-12.168 17.377zm68.366-72.981-236.355 41.676c-.881.155-1.758.23-2.622.23-7.143 0-13.472-5.12-14.755-12.398-1.438-8.158 4.01-15.938 12.168-17.376l236.355-41.676c8.164-1.438 15.938 4.009 17.377 12.167 1.438 8.159-4.01 15.939-12.168 17.377z"
  })));
};

var Phone = function Phone(_ref) {
  var className = _ref.className,
      fillColor = _ref.fillColor,
      width = _ref.width,
      style = _ref.style;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 578.106 578.106"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M577.83,456.128c1.225,9.385-1.635,17.545-8.568,24.48l-81.396,80.781    c-3.672,4.08-8.465,7.551-14.381,10.404c-5.916,2.857-11.729,4.693-17.439,5.508c-0.408,0-1.635,0.105-3.676,0.309    c-2.037,0.203-4.689,0.307-7.953,0.307c-7.754,0-20.301-1.326-37.641-3.979s-38.555-9.182-63.645-19.584    c-25.096-10.404-53.553-26.012-85.376-46.818c-31.823-20.805-65.688-49.367-101.592-85.68    c-28.56-28.152-52.224-55.08-70.992-80.783c-18.768-25.705-33.864-49.471-45.288-71.299    c-11.425-21.828-19.993-41.616-25.705-59.364S4.59,177.362,2.55,164.51s-2.856-22.95-2.448-30.294    c0.408-7.344,0.612-11.424,0.612-12.24c0.816-5.712,2.652-11.526,5.508-17.442s6.324-10.71,10.404-14.382L98.022,8.756    c5.712-5.712,12.24-8.568,19.584-8.568c5.304,0,9.996,1.53,14.076,4.59s7.548,6.834,10.404,11.322l65.484,124.236    c3.672,6.528,4.692,13.668,3.06,21.42c-1.632,7.752-5.1,14.28-10.404,19.584l-29.988,29.988c-0.816,0.816-1.53,2.142-2.142,3.978    s-0.918,3.366-0.918,4.59c1.632,8.568,5.304,18.36,11.016,29.376c4.896,9.792,12.444,21.726,22.644,35.802    s24.684,30.293,43.452,48.653c18.36,18.77,34.68,33.354,48.96,43.76c14.277,10.4,26.215,18.053,35.803,22.949    c9.588,4.896,16.932,7.854,22.031,8.871l7.648,1.531c0.816,0,2.145-0.307,3.979-0.918c1.836-0.613,3.162-1.326,3.979-2.143    l34.883-35.496c7.348-6.527,15.912-9.791,25.705-9.791c6.938,0,12.443,1.223,16.523,3.672h0.611l118.115,69.768    C571.098,441.238,576.197,447.968,577.83,456.128z"
  }));
};

var Picture = function Picture(_ref) {
  var fillColor = _ref.fillColor,
      width = _ref.width,
      style = _ref.style,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 100 100"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M50,40c-8.285,0-15,6.718-15,15c0,8.285,6.715,15,15,15c8.283,0,15-6.715,15-15    C65,46.718,58.283,40,50,40z M90,25H78c-1.65,0-3.428-1.28-3.949-2.846l-3.102-9.309C70.426,11.28,68.65,10,67,10H33    c-1.65,0-3.428,1.28-3.949,2.846l-3.102,9.309C25.426,23.72,23.65,25,22,25H10C4.5,25,0,29.5,0,35v45c0,5.5,4.5,10,10,10h80    c5.5,0,10-4.5,10-10V35C100,29.5,95.5,25,90,25z M50,80c-13.807,0-25-11.193-25-25c0-13.806,11.193-25,25-25    c13.805,0,25,11.194,25,25C75,68.807,63.805,80,50,80z M86.5,41.993c-1.932,0-3.5-1.566-3.5-3.5c0-1.932,1.568-3.5,3.5-3.5    c1.934,0,3.5,1.568,3.5,3.5C90,40.427,88.433,41.993,86.5,41.993z"
  }));
};

var Pin = function Pin(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    style: style,
    className: className,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512",
    width: width
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035    c6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719    c-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z"
  }))));
};

var Product = function Product(_ref) {
  var fillColor = _ref.fillColor,
      style = _ref.style,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    xmlns: "http://www.w3.org/2000/svg",
    style: style,
    width: width,
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    stroke: fillColor,
    fill: fillColor,
    d: "M447.988,139.696c-0.156-2.084-1.9-3.696-3.988-3.696h-72v-20C372,52.036,319.96,0,256,0S140,52.036,140,116v20H68    c-2.088,0-3.832,1.612-3.988,3.696l-28,368c-0.084,1.108,0.296,2.204,1.056,3.02C37.824,511.536,38.888,512,40,512h432    c1.112,0,2.176-0.464,2.932-1.28c0.756-0.816,1.14-1.912,1.056-3.02L447.988,139.696z M172,116c0-46.316,37.68-84,84-84    s84,37.684,84,84v20H172V116z M156,248c-22.06,0-40-17.944-40-40c0-15.964,8-30.348,24-36.66V208c0,8.824,7.18,16,16,16    s16-7.176,16-16v-36.636c16,6.312,24,20.804,24,36.636C196,230.056,178.06,248,156,248z M356,248c-22.06,0-40-17.944-40-40    c0-15.964,8-30.348,24-36.66V208c0,8.824,7.18,16,16,16s16-7.176,16-16v-36.636c16,6.312,24,20.804,24,36.636    C396,230.056,378.06,248,356,248z"
  })));
};

var Restore = function Restore(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 49.499 49.499"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    stroke: fillColor,
    fill: fillColor,
    d: "M8.143,10.804C7.473,11.682,7,11.842,7,11.099V9.751c0-1.933-1.567-3.5-3.5-3.5S0,7.818,0,9.751v12   c0,1.933,1.567,3.5,3.5,3.5h12c1.933,0,3.5-1.567,3.5-3.5s-1.567-3.5-3.5-3.5c0,0-0.579,0-1.294,0s-0.916-0.817-0.31-1.74   c2.752-4.187,7.47-6.795,12.569-6.795c8.29,0,15.034,6.744,15.034,15.034c0,8.289-6.744,15.033-15.034,15.033c-2.209,0-4,1.791-4,4   s1.791,4,4,4c12.701,0.001,23.034-10.332,23.034-23.032c0-12.701-10.333-23.034-23.034-23.034   C19.204,1.716,12.445,5.167,8.143,10.804z"
  })));
};

var Report = function Report(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 477.867 477.867"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "M460.8,119.467h-85.333v-102.4C375.467,7.641,367.826,0,358.4,0H17.067C7.641,0,0,7.641,0,17.067V409.6    c0,37.703,30.564,68.267,68.267,68.267H409.6c37.703,0,68.267-30.564,68.267-68.267V136.533    C477.867,127.108,470.226,119.467,460.8,119.467z M136.533,85.333h102.4c9.426,0,17.067,7.641,17.067,17.067    s-7.641,17.067-17.067,17.067h-102.4c-9.426,0-17.067-7.641-17.067-17.067S127.108,85.333,136.533,85.333z M290.133,409.6h-204.8    c-9.426,0-17.067-7.641-17.067-17.067s7.641-17.067,17.067-17.067h204.8c9.426,0,17.067,7.641,17.067,17.067    S299.559,409.6,290.133,409.6z M290.133,341.333h-204.8c-9.426,0-17.067-7.641-17.067-17.067c0-9.426,7.641-17.067,17.067-17.067    h204.8c9.426,0,17.067,7.641,17.067,17.067C307.2,333.692,299.559,341.333,290.133,341.333z M290.133,273.067h-204.8    c-9.426,0-17.067-7.641-17.067-17.067c0-9.426,7.641-17.067,17.067-17.067h204.8c9.426,0,17.067,7.641,17.067,17.067    C307.2,265.426,299.559,273.067,290.133,273.067z M290.133,204.8h-204.8c-9.426,0-17.067-7.641-17.067-17.067    c0-9.426,7.641-17.067,17.067-17.067h204.8c9.426,0,17.067,7.641,17.067,17.067C307.2,197.159,299.559,204.8,290.133,204.8z     M443.733,409.6c0,18.851-15.282,34.133-34.133,34.133s-34.133-15.282-34.133-34.133v-256h68.267V409.6z"
  }))));
};

var Sale = function Sale(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M444.07,67.946H302.344c-13.613,0-26.409,5.301-36.034,14.927L65.872,283.312c-9.626,9.625-14.927,22.422-14.927,36.034    s5.301,26.409,14.927,36.034L207.596,497.1c9.934,9.934,22.984,14.9,36.033,14.9s26.099-4.967,36.033-14.902l200.44-200.44    c9.626-9.626,14.927-22.422,14.927-36.034v-141.72C495.029,90.806,472.169,67.946,444.07,67.946z M376.124,237.81    c-28.099,0-50.959-22.86-50.959-50.959s22.86-50.959,50.959-50.959s50.959,22.86,50.959,50.959S404.223,237.81,376.124,237.81z"
  }))), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M410.097,0H268.371c-13.613,0-26.409,5.301-36.034,14.927L31.899,215.366c-9.626,9.625-14.927,22.422-14.927,36.034    c0,10.647,3.256,20.788,9.276,29.31c3.999-7.81,9.219-15.04,15.603-21.422L242.288,58.849    c16.041-16.041,37.369-24.876,60.056-24.876h141.724c4.942,0,9.78,0.448,14.493,1.263C451.918,14.81,432.709,0,410.097,0z"
  }))));
};

var Save = function Save(_ref) {
  var className = _ref.className,
      fillColor = _ref.fillColor,
      style = _ref.style,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    d: "m486.996094 64.382812-39.378906-39.378906c-16-16.023437-37.695313-25.003906-60.332032-25.003906h-328.617187c-32.40625 0-58.667969 26.261719-58.667969 58.667969v394.664062c0 32.40625 26.261719 58.667969 58.667969 58.667969h394.664062c32.40625 0 58.667969-26.261719 58.667969-58.667969v-328.617187c0-22.636719-8.980469-44.332032-25.003906-60.332032zm-401.664063 68.949219v-53.332031c0-8.832031 7.167969-16 16-16h224c8.832031 0 16 7.167969 16 16v53.332031c0 8.832031-7.167969 16-16 16h-224c-8.832031 0-16-7.167969-16-16zm170.667969 293.335938c-53.011719 0-96-42.988281-96-96 0-53.015625 42.988281-96 96-96s96 42.984375 96 96c0 53.011719-42.988281 96-96 96zm0 0"
  }));
};

var Search = function Search(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 250.313 250.313"
  }, /*#__PURE__*/React.createElement("g", {
    id: "Search"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    style: _extends({}, style, {
      fillRule: 'evenodd',
      clipRule: 'evenodd'
    }),
    d: "M244.186,214.604l-54.379-54.378c-0.289-0.289-0.628-0.491-0.93-0.76   c10.7-16.231,16.945-35.66,16.945-56.554C205.822,46.075,159.747,0,102.911,0S0,46.075,0,102.911   c0,56.835,46.074,102.911,102.91,102.911c20.895,0,40.323-6.245,56.554-16.945c0.269,0.301,0.47,0.64,0.759,0.929l54.38,54.38   c8.169,8.168,21.413,8.168,29.583,0C252.354,236.017,252.354,222.773,244.186,214.604z M102.911,170.146   c-37.134,0-67.236-30.102-67.236-67.235c0-37.134,30.103-67.236,67.236-67.236c37.132,0,67.235,30.103,67.235,67.236   C170.146,140.044,140.043,170.146,102.911,170.146z"
  })));
};

var Settings = function Settings(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 507.451 507.45"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M440.813,280.5c0-7.65,2.55-15.3,2.55-25.5s0-17.85-2.55-25.5l53.55-43.35c5.1-5.1,5.1-10.2,2.55-15.3l-51-89.25    c-2.55-2.55-7.649-5.1-15.3-2.55l-63.75,25.5c-12.75-10.2-28.05-17.85-43.35-25.5l-10.2-66.3C315.863,5.1,308.212,0,303.113,0    h-102c-5.101,0-12.75,5.1-12.75,10.2l-10.2,68.85c-15.3,5.1-28.05,15.3-43.35,25.5l-61.2-25.5c-7.65-2.55-12.75,0-17.851,5.1    l-51,89.25c-2.55,2.55,0,10.2,5.1,15.3l53.55,40.8c0,7.65-2.55,15.3-2.55,25.5s0,17.85,2.55,25.5l-53.55,43.35    c-5.1,5.101-5.1,10.2-2.55,15.301l51,89.25c2.55,2.55,7.649,5.1,15.3,2.55l63.75-25.5c12.75,10.2,28.05,17.85,43.35,25.5    l10.2,66.3c0,5.1,5.1,10.2,12.75,10.2h102c5.101,0,12.75-5.101,12.75-10.2l10.2-66.3c15.3-7.65,30.6-15.3,43.35-25.5l63.75,25.5    c5.101,2.55,12.75,0,15.301-5.101l51-89.25c2.55-5.1,2.55-12.75-2.551-15.3L440.813,280.5z M252.113,344.25    c-48.45,0-89.25-40.8-89.25-89.25s40.8-89.25,89.25-89.25s89.25,40.8,89.25,89.25S300.563,344.25,252.113,344.25z"
  }))));
};

var Signout = function Signout(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    style: _extends({}, style, {
      strokeWidth: '30px'
    }),
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "-44 0 512 512"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m211.863281 512c-116.820312 0-211.863281-95.035156-211.863281-211.863281 0-95.152344 64.007812-179.171875 155.664062-204.328125 9.386719-2.53125 19.109376 2.949218 21.699219 12.363281 2.574219 9.398437-2.949219 19.121094-12.355469 21.691406-76.359374 20.964844-129.699218 90.980469-129.699218 170.273438 0 97.34375 79.199218 176.554687 176.554687 176.554687 97.351563 0 176.550781-79.210937 176.550781-176.554687 0-77.429688-51.757812-146.996094-125.863281-169.171875-9.34375-2.792969-14.644531-12.636719-11.851562-21.980469 2.800781-9.328125 12.664062-14.621094 21.972656-11.84375 88.9375 26.617187 151.050781 110.082031 151.050781 202.996094 0 116.828125-95.039062 211.863281-211.859375 211.863281zm0 0"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "m211.863281 229.515625c-9.75 0-17.65625-7.894531-17.65625-17.652344v-194.207031c0-9.761719 7.90625-17.65625 17.65625-17.65625s17.652344 7.894531 17.652344 17.65625v194.207031c0 9.757813-7.902344 17.652344-17.652344 17.652344zm0 0"
  }));
};

var Square = function Square(_ref) {
  var fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 401.998 401.998"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    strokeWidth: "15px",
    d: "M377.87,24.126C361.786,8.042,342.417,0,319.769,0H82.227C59.579,0,40.211,8.042,24.125,24.126   C8.044,40.212,0.002,59.576,0.002,82.228v237.543c0,22.647,8.042,42.014,24.123,58.101c16.086,16.085,35.454,24.127,58.102,24.127   h237.542c22.648,0,42.011-8.042,58.102-24.127c16.085-16.087,24.126-35.453,24.126-58.101V82.228   C401.993,59.58,393.951,40.212,377.87,24.126z M365.448,319.771c0,12.559-4.47,23.314-13.415,32.264   c-8.945,8.945-19.698,13.411-32.265,13.411H82.227c-12.563,0-23.317-4.466-32.264-13.411c-8.945-8.949-13.418-19.705-13.418-32.264   V82.228c0-12.562,4.473-23.316,13.418-32.264c8.947-8.946,19.701-13.418,32.264-13.418h237.542   c12.566,0,23.319,4.473,32.265,13.418c8.945,8.947,13.415,19.701,13.415,32.264V319.771L365.448,319.771z"
  })));
};

var Success = function Success(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 52 52",
    width: width,
    style: style
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M26,0C11.664,0,0,11.663,0,26s11.664,26,26,26s26-11.663,26-26S40.336,0,26,0z M40.495,17.329l-16,18   C24.101,35.772,23.552,36,22.999,36c-0.439,0-0.88-0.144-1.249-0.438l-10-8c-0.862-0.689-1.002-1.948-0.312-2.811   c0.689-0.863,1.949-1.003,2.811-0.313l8.517,6.813l14.739-16.581c0.732-0.826,1.998-0.9,2.823-0.166   C41.154,15.239,41.229,16.503,40.495,17.329z"
  })));
};

var StockManager = function StockManager(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 440.994 440.994"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M274.61,249.183c-5.044,0-8.816,3.714-10.618,5.929c-4.025,4.951-6.336,12.059-6.336,19.499s2.311,14.548,6.336,19.5    c1.802,2.214,5.574,5.928,10.618,5.928s8.816-3.714,10.618-5.928c4.025-4.952,6.336-12.06,6.336-19.5s-2.311-14.548-6.336-19.499    C283.428,252.896,279.654,249.183,274.61,249.183z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M166.384,191.81c5.044,0,8.816-3.714,10.618-5.928c4.026-4.952,6.336-12.059,6.336-19.5c0-7.441-2.31-14.547-6.336-19.499    c-1.802-2.214-5.574-5.928-10.618-5.928c-5.044,0-8.816,3.714-10.618,5.928c-4.026,4.952-6.336,12.058-6.336,19.499    c0,7.441,2.31,14.548,6.336,19.5C157.567,188.097,161.34,191.81,166.384,191.81z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M435.289,209.037l-53.984-40.794l19.699-64.751c1.312-4.31,0.525-8.984-2.123-12.628    c-2.647-3.643-6.854-5.833-11.356-5.916l-67.672-1.235l-22.065-63.997c-1.469-4.262-4.855-7.587-9.143-8.979    c-4.283-1.393-8.979-0.692-12.675,1.892l-55.475,38.814L165.02,12.627c-3.693-2.583-8.387-3.285-12.674-1.892    c-4.289,1.393-7.672,4.718-9.143,8.979l-22.064,63.996l-67.672,1.236c-4.502,0.083-8.707,2.272-11.355,5.916    c-2.648,3.644-3.436,8.319-2.125,12.628l19.701,64.75L5.705,209.037C2.111,211.751,0,215.995,0,220.497    c0,4.503,2.111,8.746,5.705,11.461l53.984,40.794L39.99,337.502c-1.311,4.31-0.523,8.984,2.125,12.628    c2.648,3.643,6.854,5.833,11.355,5.916l67.672,1.236l22.064,63.996c1.469,4.262,4.854,7.587,9.141,8.979    c4.285,1.394,8.98,0.692,12.674-1.893l55.475-38.814l55.477,38.815c2.443,1.709,5.324,2.595,8.236,2.595    c1.488,0,2.986-0.23,4.438-0.703c4.286-1.393,7.672-4.718,9.141-8.979l22.063-63.996l67.675-1.237    c4.502-0.083,8.707-2.272,11.354-5.916c2.648-3.644,3.437-8.318,2.125-12.628l-19.701-64.749l53.984-40.795    c3.594-2.715,5.705-6.958,5.705-11.461S438.883,211.75,435.289,209.037z M166.384,121.01c20.38,0,36.901,20.314,36.901,45.374    c0,25.061-16.521,45.375-36.901,45.375c-20.38,0-36.901-20.314-36.901-45.375C129.482,141.324,146.004,121.01,166.384,121.01z     M164.038,320.178c-2.307,3.209-6.047,5.125-10.005,5.125c-2.581,0-5.059-0.8-7.163-2.312c-5.509-3.957-6.771-11.658-2.813-17.167    l132.9-185.01c2.306-3.209,6.046-5.125,10.005-5.125c2.58,0,5.058,0.8,7.162,2.312c5.509,3.957,6.771,11.658,2.813,17.167    L164.038,320.178z M274.61,319.983c-20.38,0-36.901-20.313-36.901-45.375c0-25.059,16.521-45.373,36.901-45.373    s36.9,20.314,36.9,45.373C311.512,299.669,294.99,319.983,274.61,319.983z"
  }))));
};

var UserPicture = function UserPicture(_ref) {
  var fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 53 53"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    stroke: fillColor,
    fill: fillColor,
    className: "user-shape",
    d: "M18.613,41.552l-7.907,4.313c-0.464,0.253-0.881,0.564-1.269,0.903C14.047,50.655,19.998,53,26.5,53  c6.454,0,12.367-2.31,16.964-6.144c-0.424-0.358-0.884-0.68-1.394-0.934l-8.467-4.233c-1.094-0.547-1.785-1.665-1.785-2.888v-3.322  c0.238-0.271,0.51-0.619,0.801-1.03c1.154-1.63,2.027-3.423,2.632-5.304c1.086-0.335,1.886-1.338,1.886-2.53v-3.546  c0-0.78-0.347-1.477-0.886-1.965v-5.126c0,0,1.053-7.977-9.75-7.977s-9.75,7.977-9.75,7.977v5.126  c-0.54,0.488-0.886,1.185-0.886,1.965v3.546c0,0.934,0.491,1.756,1.226,2.231c0.886,3.857,3.206,6.633,3.206,6.633v3.24  C20.296,39.899,19.65,40.986,18.613,41.552z"
  }), /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
    fill: fillColor + "20",
    d: "M26.953,0.004C12.32-0.246,0.254,11.414,0.004,26.047C-0.138,34.344,3.56,41.801,9.448,46.76   c0.385-0.336,0.798-0.644,1.257-0.894l7.907-4.313c1.037-0.566,1.683-1.653,1.683-2.835v-3.24c0,0-2.321-2.776-3.206-6.633   c-0.734-0.475-1.226-1.296-1.226-2.231v-3.546c0-0.78,0.347-1.477,0.886-1.965v-5.126c0,0-1.053-7.977,9.75-7.977   s9.75,7.977,9.75,7.977v5.126c0.54,0.488,0.886,1.185,0.886,1.965v3.546c0,1.192-0.8,2.195-1.886,2.53   c-0.605,1.881-1.478,3.674-2.632,5.304c-0.291,0.411-0.563,0.759-0.801,1.03V38.8c0,1.223,0.691,2.342,1.785,2.888l8.467,4.233   c0.508,0.254,0.967,0.575,1.39,0.932c5.71-4.762,9.399-11.882,9.536-19.9C53.246,12.32,41.587,0.254,26.953,0.004z"
  }))));
};

var View = function View(_ref) {
  var fillColor = _ref.fillColor,
      className = _ref.className,
      style = _ref.style,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 561 561",
    width: width
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stoke: fillColor,
    d: "M280.5,89.25C153,89.25,43.35,168.3,0,280.5c43.35,112.2,153,191.25,280.5,191.25S517.65,392.7,561,280.5    C517.65,168.3,408,89.25,280.5,89.25z M280.5,408C209.1,408,153,351.9,153,280.5c0-71.4,56.1-127.5,127.5-127.5    c71.4,0,127.5,56.1,127.5,127.5C408,351.9,351.9,408,280.5,408z M280.5,204c-43.35,0-76.5,33.15-76.5,76.5    c0,43.35,33.15,76.5,76.5,76.5c43.35,0,76.5-33.15,76.5-76.5C357,237.15,323.85,204,280.5,204z"
  }));
};

var Warning = function Warning(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      width = _ref.width,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 512 512",
    width: width,
    style: style
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stoke: fillColor,
    d: "M507.494,426.066L282.864,53.537c-5.677-9.415-15.87-15.172-26.865-15.172c-10.995,0-21.188,5.756-26.865,15.172    L4.506,426.066c-5.842,9.689-6.015,21.774-0.451,31.625c5.564,9.852,16.001,15.944,27.315,15.944h449.259    c11.314,0,21.751-6.093,27.315-15.944C513.508,447.839,513.336,435.755,507.494,426.066z M256.167,167.227    c12.901,0,23.817,7.278,23.817,20.178c0,39.363-4.631,95.929-4.631,135.292c0,10.255-11.247,14.554-19.186,14.554    c-10.584,0-19.516-4.3-19.516-14.554c0-39.363-4.63-95.929-4.63-135.292C232.021,174.505,242.605,167.227,256.167,167.227z     M256.498,411.018c-14.554,0-25.471-11.908-25.471-25.47c0-13.893,10.916-25.47,25.471-25.47c13.562,0,25.14,11.577,25.14,25.47    C281.638,399.11,270.06,411.018,256.498,411.018z"
  }));
};

var User = function User(_ref) {
  var width = _ref.width,
      style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 408 408"
  }, /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M204,204c56.1,0,102-45.9,102-102S260.1,0,204,0c-56.1,0-102,45.9-102,102S147.9,204,204,204z M204,255    C135.15,255,0,288.15,0,357v51h408v-51C408,288.15,272.85,255,204,255z"
  }));
};

var rgbaToHex = function rgbaToHex(r, g, b) {
  r = r.toString(16);
  g = g.toString(16);
  b = b.toString(16);
  if (r.length === 1) r = '0' + r;
  if (g.length === 1) g = '0' + g;
  if (b.length === 1) b = '0' + b;
  return "#" + r + g + b;
};
var hexDecrement = function hexDecrement(hex, decrementAmount) {
  if (!hex || !decrementAmount) {
    return;
  }

  var r = 0,
      g = 0,
      b = 0;

  if (hex.length === 4) {
    r = '0x' + hex[1] + hex[1];
    g = '0x' + hex[2] + hex[2];
    b = '0x' + hex[3] + hex[3];
  } else if (hex.length === 7) {
    r = '0x' + hex[1] + hex[2];
    g = '0x' + hex[3] + hex[4];
    b = '0x' + hex[5] + hex[6];
  }

  var derementedR = r - decrementAmount < 0 ? 0 : r - decrementAmount;
  var derementedG = g - decrementAmount < 0 ? 0 : g - decrementAmount;
  var derementedB = b - decrementAmount < 0 ? 0 : b - decrementAmount;
  return rgbaToHex(derementedR, derementedG, derementedB);
};

var COLOR_ERROR = "#f90813";
var COLOR_WARNING = "#f9b700";
var COLOR_WHITE = "#ffffffd9";
var blackValue = function blackValue(theme) {
  return theme.scheme === ThemesNames.DARK ? '#0f0f0f' : '#171f2f';
};
var borderColorValue = function borderColorValue(props) {
  if (props.variant) {
    switch (props.variant) {
      case ThemeVariants.SECONDARY_LIGHT:
        return props.themeContext.secondary;

      case ThemeVariants.SECONDARY:
        return props.themeContext.secondary;

      case ThemeVariants.ERROR:
        return COLOR_ERROR;

      case ThemeVariants.WARNING:
        return COLOR_WARNING;

      case ThemeVariants.GLOSSY:
        return 'transparent';
    }
  } else {
    if (props.themeContext.scheme === ThemesNames.DARK) {
      return '#464646';
    }

    return '#ececec';
  }
};
var borderWidthValue = function borderWidthValue() {
  return "1px";
};
var borderValue = function borderValue(props) {
  return borderWidthValue() + " " + borderColorValue(props) + " solid";
};
var borderRule = function borderRule(props) {
  var rule = "border: ";

  switch (props.variant) {
    case ThemeVariants.GLOSSY:
      rule += 'unset';
      break;

    default:
      rule += borderValue(props);
      break;
  }

  return rule + " !important;";
};
var borderRadiusValue = function borderRadiusValue(props) {
  return (props.themeContext.border_radius || 5) + "px";
};
var borderRadiusRule = function borderRadiusRule(props) {
  return "border-radius: " + borderRadiusValue(props) + ";";
};
var mainColorBackgroundRule = function mainColorBackgroundRule(props) {
  return "background: " + props.themeContext.main + ";";
};
var darkBackgroundRule = function darkBackgroundRule(props) {
  return "" + (props.themeContext.main && "background: " + (props.themeContext.scheme === ThemesNames.DARK ? "#2a2a2a" : hexDecrement(props.themeContext.main, 100) + "08") + ";");
};
var blackBackgroundRule = function blackBackgroundRule(props) {
  return "background: " + blackValue(props.themeContext) + ";";
};
var backgroundRule = function backgroundRule(props) {
  var colorValue = '';

  if (props.variant) {
    switch (props.variant) {
      case ThemeVariants.DARK:
        colorValue = blackValue(props.themeContext);
        break;

      case ThemeVariants.SECONDARY:
        colorValue = props.themeContext.secondary;
        break;

      case ThemeVariants.SECONDARY_LIGHT:
        colorValue = hexDecrement(props.themeContext.secondary, 40) + "2e";
        break;

      case ThemeVariants.WARNING:
        colorValue = COLOR_WARNING + "2e";
        break;

      case ThemeVariants.ERROR:
        colorValue = COLOR_ERROR + "2e";
        break;

      case ThemeVariants.MAIN:
        colorValue = props.themeContext.main;
        break;

      case ThemeVariants.GLOSSY:
        colorValue = "linear-gradient(45deg, " + props.themeContext.main + ", " + props.themeContext.secondary + ")";
        break;
    }
  } else {
    if (props.themeContext.scheme === ThemesNames.DARK) {
      colorValue = "#343434";
    } else {
      colorValue = 'white';
    }
  }

  return "background: " + colorValue + ";";
};
var colorValue = function colorValue(props) {
  var colorValue = '';

  switch (props.variant) {
    case ThemeVariants.MAIN:
      colorValue = hexDecrement(props.themeContext.main, 15);
      break;

    case ThemeVariants.SECONDARY:
      colorValue = hexDecrement(props.themeContext.secondary, 15);
      break;

    case ThemeVariants.ERROR:
      colorValue = COLOR_ERROR;
      break;

    case ThemeVariants.WARNING:
      colorValue = COLOR_WARNING;
      break;

    case ThemeVariants.WHITE:
      colorValue = "#ffffffd9";
      break;

    case ThemeVariants.DARK:
      colorValue = blackValue(props.themeContext);
      break;

    default:
      colorValue = props.themeContext.scheme === ThemesNames.DARK ? COLOR_WHITE : blackValue(props.themeContext);
      break;
  }

  if (props.variant) {
    colorValue += " !important";
  }

  return colorValue;
};
var colorRule = function colorRule(props) {
  var resultantColorValue = colorValue(props);
  return "\n        color: " + resultantColorValue + ";\n        & * {\n            color: " + resultantColorValue + ";\n        }\n    ";
};
var labelColorRule = function labelColorRule(props) {
  return "color: " + (props.themeContext.scheme === ThemesNames.DARK || props.variant === ThemeVariants.WHITE ? "#afafaf" : "#757575") + ";";
};
var fontSizeRule = function fontSizeRule(fontSize) {
  return "\n    font-size: " + fontSize + ";\n    & * {\n        font-size: " + fontSize + ";\n    }\n";
};

var Cart = function Cart(_ref) {
  var className = _ref.className,
      fillColor = _ref.fillColor,
      style = _ref.style,
      filled = _ref.filled,
      width = _ref.width;
  return /*#__PURE__*/React.createElement("svg", {
    className: className,
    style: style,
    filled: filled,
    width: width,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 424.449 424.449"
  }, /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("circle", {
    fill: fillColor,
    stroke: fillColor,
    cx: "170.241",
    cy: "374.273",
    r: "50.176"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M316.673,324.098L316.673,324.098c-27.711,0-50.176,22.465-50.176,50.176s22.465,50.176,50.176,50.176     c27.711,0,50.176-22.465,50.176-50.176S344.384,324.098,316.673,324.098z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: fillColor,
    stroke: fillColor,
    d: "M402.177,272.897H140.545l-5.12-29.696h215.04c6.326,0.019,12.017-3.843,14.336-9.728l51.2-129.024     c3.111-7.892-0.766-16.812-8.658-19.922c-1.808-0.713-3.735-1.076-5.678-1.07H108.801L96.513,12.801     c-1.262-7.471-7.784-12.906-15.36-12.8h-58.88c-8.483,0-15.36,6.877-15.36,15.36s6.877,15.36,15.36,15.36h46.08l44.032,260.096     c1.262,7.471,7.784,12.906,15.36,12.8h274.432c8.483,0,15.36-6.877,15.36-15.36C417.537,279.774,410.66,272.897,402.177,272.897z     "
  })));
};

var Star = function Star(_ref) {
  var style = _ref.style,
      fillColor = _ref.fillColor,
      className = _ref.className,
      width = _ref.width,
      filled = _ref.filled;
  return /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 -10 511.99143 511",
    style: style,
    className: (className || '') + " " + (filled ? 'fill_main' : ''),
    width: width
  }, /*#__PURE__*/React.createElement("path", {
    style: {
      fill: "" + (filled ? fillColor : 'transparent'),
      stroke: fillColor,
      strokeWidth: '20px'
    },
    d: "m510.652344 185.882812c-3.371094-10.367187-12.566406-17.707031-23.402344-18.6875l-147.796875-13.417968-58.410156-136.75c-4.3125-10.046875-14.125-16.53125-25.046875-16.53125s-20.738282 6.484375-25.023438 16.53125l-58.410156 136.75-147.820312 13.417968c-10.835938 1-20.011719 8.339844-23.402344 18.6875-3.371094 10.367188-.257813 21.738282 7.9375 28.925782l111.722656 97.964844-32.941406 145.085937c-2.410156 10.667969 1.730468 21.699219 10.582031 28.097656 4.757813 3.457031 10.347656 5.183594 15.957031 5.183594 4.820313 0 9.644532-1.28125 13.953125-3.859375l127.445313-76.203125 127.421875 76.203125c9.347656 5.585938 21.101562 5.074219 29.933593-1.324219 8.851563-6.398437 12.992188-17.429687 10.582032-28.097656l-32.941406-145.085937 111.722656-97.964844c8.191406-7.1875 11.308594-18.535156 7.9375-28.925782zm-252.203125 223.722657"
  }));
};

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n    width: 55px;\n    height: 55px;\n    display: inline-block;\n    padding: 12px;\n    border-radius: 30px;\n    margin-bottom: 10px;\n    background-color: ", "20;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var StyledIconBackground = styled.div(_templateObject(), function (props) {
  return props.themeContext.secondary;
});

var Icon = function Icon(_ref) {
  var className = _ref.className,
      icon = _ref.icon,
      style = _ref.style,
      variant = _ref.variant,
      filled = _ref.filled,
      width = _ref.width,
      background = _ref.background;
  var themeContext = useContext(ThemeContext);

  var getIcon = function getIcon() {
    var resultantFillColor = colorValue({
      variant: variant,
      themeContext: themeContext
    });
    var fillColor = resultantFillColor;
    var splittedColorValue = resultantFillColor.split('!important');

    if (splittedColorValue.length) {
      fillColor = splittedColorValue[0];
    }

    var formattedClassName = "rds-icon " + (className || '');
    var processedWidth = width || 20;

    switch (icon) {
      case Icons.ADD:
        return /*#__PURE__*/React.createElement(Add, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.APPLICATION:
        return /*#__PURE__*/React.createElement(Application, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.ARROW:
        return /*#__PURE__*/React.createElement(Arrow, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.BASKET:
        return /*#__PURE__*/React.createElement(Basket, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.BIN:
        return /*#__PURE__*/React.createElement(Bin, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.BLOCKS:
        return /*#__PURE__*/React.createElement(Blocks, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.CART:
        return /*#__PURE__*/React.createElement(Cart, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.CATEGORY:
        return /*#__PURE__*/React.createElement(Category, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.CLOCK:
        return /*#__PURE__*/React.createElement(Clock, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.CONTACT:
        return /*#__PURE__*/React.createElement(Contact, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.DUEDATE:
        return /*#__PURE__*/React.createElement(DueDate, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.EDIT:
        return /*#__PURE__*/React.createElement(Edit, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.EMPTY:
        return /*#__PURE__*/React.createElement(Empty, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.GMAIL:
        return /*#__PURE__*/React.createElement(Gmail, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.GOOGLEDRIVE:
        return /*#__PURE__*/React.createElement(GoogleDrive, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.GRAPH:
        return /*#__PURE__*/React.createElement(Graph, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.GRID:
        return /*#__PURE__*/React.createElement(Grid, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.HASHTAG:
        return /*#__PURE__*/React.createElement(Hashtag, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.HEART:
        return /*#__PURE__*/React.createElement(Heart, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.KEY:
        return /*#__PURE__*/React.createElement(Key, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.LARGEBLOCKS:
        return /*#__PURE__*/React.createElement(LargeBlocks, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.LIST:
        return /*#__PURE__*/React.createElement(List, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.NOTE:
        return /*#__PURE__*/React.createElement(Note, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.PHONE:
        return /*#__PURE__*/React.createElement(Phone, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.PICTURE:
        return /*#__PURE__*/React.createElement(Picture, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.PIN:
        return /*#__PURE__*/React.createElement(Pin, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.PRODUCT:
        return /*#__PURE__*/React.createElement(Product, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.RESTORE:
        return /*#__PURE__*/React.createElement(Restore, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.REPORT:
        return /*#__PURE__*/React.createElement(Report, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.SALE:
        return /*#__PURE__*/React.createElement(Sale, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.SAVE:
        return /*#__PURE__*/React.createElement(Save, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.SEARCH:
        return /*#__PURE__*/React.createElement(Search, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.SETTINGS:
        return /*#__PURE__*/React.createElement(Settings, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.SIGNOUT:
        return /*#__PURE__*/React.createElement(Signout, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.SQUARE:
        return /*#__PURE__*/React.createElement(Square, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.STAR:
        return /*#__PURE__*/React.createElement(Star, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.STOCKMANAGER:
        return /*#__PURE__*/React.createElement(StockManager, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.SUCCESS:
        return /*#__PURE__*/React.createElement(Success, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.USER:
        return /*#__PURE__*/React.createElement(User, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.USERPICTURE:
        return /*#__PURE__*/React.createElement(UserPicture, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.VIEW:
        return /*#__PURE__*/React.createElement(View, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      case Icons.WARNING:
        return /*#__PURE__*/React.createElement(Warning, {
          className: formattedClassName,
          fillColor: fillColor,
          style: style,
          filled: filled,
          width: processedWidth
        });

      default:
        return null;
    }
  };

  var getContent = function getContent() {
    if (background) {
      return /*#__PURE__*/React.createElement(StyledIconBackground, {
        className: "rds-icon_background",
        themeContext: themeContext
      }, getIcon());
    }

    return getIcon();
  };

  return getContent();
};

function _templateObject$1() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}

var getButtonBackgroundColor = function getButtonBackgroundColor(variant, themeSettings, isHover) {
  var mainColor = themeSettings.main;
  var BTN_BG_OPACITY = 10;
  var BTN_HOVER_BG_OPACITY = 25;
  var lightColor = "" + mainColor + (isHover ? BTN_HOVER_BG_OPACITY : BTN_BG_OPACITY);

  switch (variant) {
    case ButtonVariants.MAIN:
      return mainColor;

    case ButtonVariants.DANGER:
      return COLOR_ERROR;

    case ButtonVariants.DANGER_SECONDARY:
      return "" + COLOR_ERROR + (isHover ? BTN_HOVER_BG_OPACITY : BTN_BG_OPACITY);

    case ButtonVariants.DARK:
      return lightColor;

    case ButtonVariants.TRANSPARENT:
      return "#00000000";

    case ButtonVariants.ACCEPT:
      return lightColor;

    case ButtonVariants.ADD:
      return lightColor;

    case ButtonVariants.EDIT:
      return lightColor;

    case ButtonVariants.GOOGLE_DRIVE:
      return lightColor;

    default:
      return "" + mainColor + (isHover ? BTN_HOVER_BG_OPACITY : BTN_BG_OPACITY);
  }
};

var getButtonLabelColor = function getButtonLabelColor(variant, themeSettings) {
  var mainColor = themeSettings.main;

  switch (variant) {
    case ButtonVariants.MAIN:
      return "white";

    case ButtonVariants.DANGER:
      return 'white';

    case ButtonVariants.DANGER_SECONDARY:
      return COLOR_ERROR;

    default:
      return mainColor;
  }
};

var StyledButton = styled.button(_templateObject$1(), function (props) {
  return props.themeContext.main && "background: " + getButtonBackgroundColor(props.variant, props.themeContext) + " !important;\n        color: " + getButtonLabelColor(props.variant, props.themeContext) + ";\n        " + borderRadiusRule(props) + "\n        padding: 9px;\n        font-weight: 600;\n        transition: 0.2s all;\n        " + (props.labeled ? "\n                    padding: 5px 20px;\n                    & svg {\n                        margin: 0 9px 0 0;\n                    }" : '') + "\n        &:hover {\n            background: " + getButtonBackgroundColor(props.variant, props.themeContext, true) + " !important;\n            " + (props.variant === ButtonVariants.MAIN && "box-shadow: 0 10px 40px -5px " + props.themeContext.main + "90;") + "\n            \n        }\n        * {\n            pointer-events: none;\n        }\n        & svg {\n            width: 10px;\n            height: 100%;\n        }";
});

var Button = function Button(_ref) {
  var id = _ref.id,
      cardHoverOnly = _ref.cardHoverOnly,
      type = _ref.type,
      label = _ref.label,
      variant = _ref.variant,
      filled = _ref.filled,
      onClick = _ref.onClick,
      style = _ref.style,
      icon = _ref.icon,
      className = _ref.className;
  var themeContext = useContext(ThemeContext);

  var getIconVariant = function getIconVariant() {
    var iconVariant = ThemeVariants.MAIN;

    switch (variant) {
      case ButtonVariants.MAIN:
        iconVariant = ThemeVariants.WHITE;
        break;

      case ButtonVariants.DANGER:
        iconVariant = ThemeVariants.WHITE;
        break;

      case ButtonVariants.DANGER_SECONDARY:
        iconVariant = ThemeVariants.ERROR;
        break;

      case ButtonVariants.SECONDARY:
        iconVariant = ThemeVariants.MAIN;
        break;
    }

    return iconVariant;
  };

  return type === 'input' ? /*#__PURE__*/React.createElement("input", {
    type: "submit",
    value: label,
    className: "btn"
  }) : /*#__PURE__*/React.createElement(StyledButton, {
    className: "rds-btn align-center justify-around " + (cardHoverOnly ? 'card_hover-only_button' : '') + " " + (variant || '') + " " + (className || ''),
    themeContext: themeContext,
    id: id,
    variant: variant,
    onClick: onClick,
    type: "button",
    style: style,
    labeled: label
  }, /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center",
    style: {
      width: 'max-content'
    }
  }, icon ? /*#__PURE__*/React.createElement(Icon, {
    icon: icon,
    variant: getIconVariant(),
    filled: filled
  }) : null, /*#__PURE__*/React.createElement("span", null, label)));
};

function _templateObject$2() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledButtonGroup = styled.div(_templateObject$2(), function (props) {
  return "\n        overflow: hidden;\n        width: fit-content;\n        " + borderRadiusRule(props) + "\n        & .rds-btn {\n            margin: 0 !important;\n            border-radius: 0;\n        }\n    ";
});

var ButtonGroup = function ButtonGroup(_ref) {
  var children = _ref.children,
      className = _ref.className;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledButtonGroup, {
    themeContext: themeContext,
    className: (className || '') + " rds-flexbox align-center"
  }, children);
};

function _templateObject$3() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$3 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledH1 = styled.h1(_templateObject$3(), function (props) {
  var FONT_SIZE = '2rem';
  return "\n            " + colorRule(props) + "\n            " + fontSizeRule(FONT_SIZE) + "\n        ";
});

var H1 = function H1(_ref) {
  var themeContext = _ref.themeContext,
      className = _ref.className,
      children = _ref.children,
      align = _ref.align,
      onClick = _ref.onClick,
      variant = _ref.variant,
      style = _ref.style;
  return /*#__PURE__*/React.createElement(StyledH1, {
    align: align,
    themeContext: themeContext,
    className: className,
    onClick: onClick && onClick,
    style: onClick ? _extends({
      cursor: 'pointer'
    }, style) : style,
    variant: variant
  }, children);
};

function _templateObject$4() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$4 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledH2 = styled.h2(_templateObject$4(), function (props) {
  var FONT_SIZE = '1.2rem';
  return "\n            " + colorRule(props) + "\n            " + fontSizeRule(FONT_SIZE) + "\n        ";
});

var H2 = function H2(_ref) {
  var themeContext = _ref.themeContext,
      className = _ref.className,
      children = _ref.children,
      align = _ref.align,
      onClick = _ref.onClick,
      variant = _ref.variant,
      style = _ref.style;
  return /*#__PURE__*/React.createElement(StyledH2, {
    align: align,
    themeContext: themeContext,
    className: className,
    onClick: onClick && onClick,
    style: onClick ? _extends({
      cursor: 'pointer'
    }, style) : style,
    variant: variant
  }, children);
};

function _templateObject$5() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$5 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledH3 = styled.h3(_templateObject$5(), function (props) {
  return "\n        " + colorRule(props) + "\n        " + fontSizeRule('1rem') + "\n        font-weight: 300;\n    ";
});

var H3 = function H3(_ref) {
  var themeContext = _ref.themeContext,
      className = _ref.className,
      children = _ref.children,
      align = _ref.align,
      onClick = _ref.onClick,
      variant = _ref.variant,
      style = _ref.style;
  return /*#__PURE__*/React.createElement(StyledH3, {
    align: align,
    themeContext: themeContext,
    className: className,
    onClick: onClick && onClick,
    style: onClick ? _extends({
      cursor: 'pointer'
    }, style) : style,
    variant: variant
  }, children);
};

function _templateObject$6() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$6 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledH4 = styled.h4(_templateObject$6(), function (props) {
  return "\n        " + colorRule(props) + "\n        " + fontSizeRule('12px') + "\n        font-weight: 300;\n    ";
});

var H4 = function H4(_ref) {
  var themeContext = _ref.themeContext,
      className = _ref.className,
      children = _ref.children,
      align = _ref.align,
      onClick = _ref.onClick,
      variant = _ref.variant,
      style = _ref.style;
  return /*#__PURE__*/React.createElement(StyledH4, {
    align: align,
    themeContext: themeContext,
    className: className,
    onClick: onClick && onClick,
    style: onClick ? _extends({
      cursor: 'pointer'
    }, style) : style,
    variant: variant
  }, children);
};

function _templateObject$7() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$7 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledP = styled.p(_templateObject$7(), function (props) {
  return "\n        font-weight: 300;\n        " + colorRule(props) + "\n        " + fontSizeRule('12px') + "\n    ";
});

var P = function P(_ref) {
  var variant = _ref.variant,
      themeContext = _ref.themeContext,
      className = _ref.className,
      children = _ref.children,
      align = _ref.align,
      onClick = _ref.onClick,
      style = _ref.style;
  return /*#__PURE__*/React.createElement(StyledP, {
    align: align,
    themeContext: themeContext,
    className: className,
    onClick: onClick && onClick,
    style: onClick ? _extends({}, style, {
      cursor: 'pointer'
    }) : style,
    variant: variant
  }, children);
};

var Typography = function Typography(_ref) {
  var type = _ref.type,
      children = _ref.children,
      className = _ref.className,
      variant = _ref.variant,
      style = _ref.style;
  var themeContext = useContext(ThemeContext);

  var getTypography = function getTypography() {
    switch (type) {
      case TypographyTypes.H1:
        return /*#__PURE__*/React.createElement(H1, {
          themeContext: themeContext,
          style: style,
          className: className,
          variant: variant
        }, children);

      case TypographyTypes.H2:
        return /*#__PURE__*/React.createElement(H2, {
          themeContext: themeContext,
          style: style,
          className: className,
          variant: variant
        }, children);

      case TypographyTypes.H3:
        return /*#__PURE__*/React.createElement(H3, {
          themeContext: themeContext,
          style: style,
          className: className,
          variant: variant
        }, children);

      case TypographyTypes.H4:
        return /*#__PURE__*/React.createElement(H4, {
          themeContext: themeContext,
          style: style,
          className: className,
          variant: variant
        }, children);

      case TypographyTypes.P:
        return /*#__PURE__*/React.createElement(P, {
          themeContext: themeContext,
          style: style,
          className: className,
          variant: variant
        }, children);

      default:
        return null;
    }
  };

  if (!type) {
    return /*#__PURE__*/React.createElement(ComponentError$1, {
      componentName: "Typography",
      errorMessage: "A valid \"type\" property needs to be provided"
    });
  }

  return getTypography();
};

var Typography$1 = React.memo(Typography);

function _templateObject$8() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$8 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledHeaderBreadcrumb = styled.span(_templateObject$8(), function (props) {
  return props.themeContext && "";
});

var HeaderBreadcrumb = function HeaderBreadcrumb(_ref) {
  var value = _ref.value,
      className = _ref.className,
      id = _ref.id,
      style = _ref.style,
      withSeparator = _ref.withSeparator,
      link = _ref.link,
      onClick = _ref.onClick;
  var themeContext = useContext(ThemeContext);

  var getValue = function getValue() {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("span", {
      className: "breadcrumb_value"
    }, value, "\xA0"), withSeparator ? /*#__PURE__*/React.createElement("span", {
      className: "breadcrumb_separator"
    }, "/") : null, "\xA0");
  };

  var getContent = function getContent() {
    if (link) {
      return /*#__PURE__*/React.createElement(Link, {
        style: {
          display: 'block'
        },
        to: link
      }, getValue());
    }

    return getValue();
  };

  return /*#__PURE__*/React.createElement(StyledHeaderBreadcrumb, {
    id: id,
    themeContext: themeContext,
    className: "breadcrumb " + className,
    onClick: onClick,
    style: style
  }, getContent());
};

var Header = function Header(_ref) {
  var alignCenter = _ref.alignCenter,
      title = _ref.title,
      icon = _ref.icon,
      text = _ref.text,
      size = _ref.size,
      onClick = _ref.onClick,
      children = _ref.children,
      variant = _ref.variant,
      className = _ref.className,
      tag = _ref.tag,
      breadcrumb = _ref.breadcrumb,
      style = _ref.style;

  var getIconSize = function getIconSize() {
    switch (size) {
      case HeaderSizes.XSMALL:
        return 10;

      case HeaderSizes.SMALL:
        return 12;

      case HeaderSizes.MEDIUM:
        return 20;

      default:
        return 25;
    }
  };

  var getIcon = function getIcon() {
    var size = getIconSize();
    var formattedSize = size + "px";
    var iconStyle = {
      width: formattedSize,
      minWidth: formattedSize,
      height: formattedSize,
      margin: size / 1.7 + "px 13px 0 0"
    };
    return /*#__PURE__*/React.createElement(Icon, {
      className: "header_icon",
      icon: icon,
      style: iconStyle,
      variant: variant
    });
  };

  var getBreadcrumb = function getBreadcrumb() {
    return breadcrumb ? /*#__PURE__*/React.createElement(HeaderBreadcrumb, {
      link: breadcrumb.link,
      value: breadcrumb.value,
      withSeparator: true
    }) : null;
  };

  var getTitle = function getTitle() {
    var breadcrumbContent = getBreadcrumb();
    var titleSize;

    switch (size) {
      case HeaderSizes.XSMALL:
        titleSize = TypographyTypes.H4;
        break;

      case HeaderSizes.SMALL:
        titleSize = TypographyTypes.H3;
        break;

      case HeaderSizes.MEDIUM:
        titleSize = TypographyTypes.H2;
        break;

      default:
        titleSize = TypographyTypes.H1;
        break;
    }

    if (tag) {
      return /*#__PURE__*/React.createElement("div", {
        className: tag ? 'rds-flexbox align-center' : ''
      }, /*#__PURE__*/React.createElement(Typography$1, {
        type: titleSize,
        variant: variant,
        onClick: onClick
      }, breadcrumbContent, title), tag);
    }

    return /*#__PURE__*/React.createElement(Typography$1, {
      type: titleSize,
      variant: variant,
      onClick: onClick
    }, breadcrumbContent, title);
  };

  var getContent = function getContent() {
    return /*#__PURE__*/React.createElement(React.Fragment, null, getTitle(), children);
  };

  return /*#__PURE__*/React.createElement("header", {
    className: "main-header " + (alignCenter ? 'center' : '') + " " + className,
    align: alignCenter ? 'center' : null,
    style: style
  }, /*#__PURE__*/React.createElement("div", {
    className: icon ? 'rds-flexbox align-top' : null
  }, icon ? getIcon() : null, /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox direction-column"
  }, getContent(), text && typeof text === 'string' ? /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P,
    variant: variant
  }, text) : text)));
};

function _templateObject$9() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n    position: relative;\n    padding: 18px 20px;\n    overflow: hidden;\n    transition: 0.2s background-color;\n"]);

  _templateObject$9 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledCard = styled.article(_templateObject$9(), function (props) {
  return props.themeContext.main && "\n    " + backgroundRule(props) + "\n    " + borderRule(props) + "\n    " + (props.noBorderRadius ? '' : borderRadiusRule(props)) + "\n    ";
});

var Card = function Card(_ref) {
  var children = _ref.children,
      className = _ref.className,
      onClick = _ref.onClick,
      style = _ref.style,
      onDoubleClick = _ref.onDoubleClick,
      onMouseOver = _ref.onMouseOver,
      onMouseLeave = _ref.onMouseLeave,
      variant = _ref.variant,
      id = _ref.id,
      noBorderRadius = _ref.noBorderRadius,
      align = _ref.align,
      headerTitle = _ref.headerTitle,
      headerText = _ref.headerText,
      headerSize = _ref.headerSize,
      headerVariant = _ref.headerVariant,
      headerIcon = _ref.headerIcon;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledCard, {
    style: _extends({}, style, {
      cursor: onClick ? 'pointer' : 'unset'
    }),
    themeContext: themeContext,
    className: "card " + (className || ''),
    onClick: onClick,
    onDoubleClick: onDoubleClick,
    onMouseOver: onMouseOver,
    onMouseLeave: onMouseLeave,
    variant: variant,
    id: id,
    align: align,
    noBorderRadius: noBorderRadius
  }, headerTitle ? /*#__PURE__*/React.createElement(Header, {
    title: headerTitle,
    text: headerText,
    size: headerSize,
    variant: headerVariant,
    icon: headerIcon
  }) : null, children);
};

var ComponentError = function ComponentError(_ref) {
  var componentName = _ref.componentName,
      errorMessage = _ref.errorMessage;
  return /*#__PURE__*/React.createElement(Card, {
    className: "rds-m_top__sm"
  }, /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P
  }, /*#__PURE__*/React.createElement(Emoji$1, {
    type: EmojiTypes.WARNING
  }), " ", componentName, " component error"), /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.H4
  }, errorMessage));
};

var ComponentError$1 = React.memo(ComponentError);

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n    font-size: 11px;\n    margin: 0 10px;\n    cursor: default;\n    ", "\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n    font-size: 12px;\n    ", "\n    ", "\n    cursor: pointer;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$a() {
  var data = _taggedTemplateLiteralLoose([""]);

  _templateObject$a = function _templateObject() {
    return data;
  };

  return data;
}
var StyledBreadcrumbs = styled.div(_templateObject$a());
var StyledBreadcrumbValue = styled.span(_templateObject2(), function (props) {
  return colorRule(props);
}, function (props) {
  return props.active ? "\n    font-weight: bolder;\n    color: " + props.themeContext.secondary : '';
});
var StyledBreadcrumbSeparator = styled.span(_templateObject3(), function (props) {
  return colorRule(props);
});
var Breadcrumb = React.memo(function (_ref) {
  var linkValue = _ref.linkValue,
      children = _ref.children,
      isLastOne = _ref.isLastOne,
      active = _ref.active,
      themeContext = _ref.themeContext,
      linkBase = _ref.linkBase;

  var getBreadcrumbContent = function getBreadcrumbContent() {
    return /*#__PURE__*/React.createElement("span", {
      className: "rds-flexbox align-center "
    }, /*#__PURE__*/React.createElement(StyledBreadcrumbValue, {
      themeContext: themeContext,
      active: active
    }, children), isLastOne ? null : /*#__PURE__*/React.createElement(StyledBreadcrumbSeparator, {
      themeContext: themeContext
    }, '>'));
  };

  if (linkBase) {
    return /*#__PURE__*/React.createElement(Link, {
      to: "" + linkBase + linkValue
    }, getBreadcrumbContent());
  }

  return getBreadcrumbContent();
});

var Breadcrumbs = function Breadcrumbs(_ref2) {
  var values = _ref2.values,
      linkBase = _ref2.linkBase,
      current = _ref2.current,
      className = _ref2.className;
  var themeContext = useContext(ThemeContext);

  if (!values) {
    return /*#__PURE__*/React.createElement(ComponentError$1, {
      componentName: "Breadcrumbs",
      errorMessage: "A \"values\" prop needs to be provided"
    });
  }

  return /*#__PURE__*/React.createElement(StyledBreadcrumbs, {
    className: "rds-flexbox align-center " + (className || ''),
    themeContext: themeContext
  }, values.map(function (v, i) {
    return /*#__PURE__*/React.createElement(Breadcrumb, {
      key: v.linkValue,
      active: v.label === current,
      isLastOne: i === values.length - 1,
      themeContext: themeContext,
      linkBase: linkBase,
      linkValue: v.linkValue
    }, v.label);
  }));
};

function _templateObject2$1() {
  var data = _taggedTemplateLiteralLoose(["\n    font-size: 0.7rem;\n    color: ", ";\n"]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$b() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n    ", "\n    ", "\n    ", "\n    ", "\n    display: inline-block;\n    line-height: 1;\n    margin: 0 7px 5px 0;\n    padding: 2px 15px;\n    opacity: 1;\n    transition: 0.4s transform, 2s opacity, 0.2s background-color, 0.2s padding;\n    border-radius: 20px !important;\n    border: 1.5px solid transparent;\n"]);

  _templateObject$b = function _templateObject() {
    return data;
  };

  return data;
}
var StyledTag = styled.span(_templateObject$b(), function (props) {
  return colorRule(props);
}, function (props) {
  return !props.variant ? borderRule(props) : '';
}, function (props) {
  return borderRadiusRule(props);
}, function (props) {
  return !props.variant ? backgroundRule(props) : '';
}, function (props) {
  return props.variant === TagVariants.DARK ? blackBackgroundRule(props) : '';
});
var StyledTagContent = styled.span(_templateObject2$1(), function (props) {
  return props.variant === TagVariants.DARK ? 'white !important' : 'unset';
});

var Tag = function Tag(_ref) {
  var className = _ref.className,
      children = _ref.children,
      variant = _ref.variant,
      style = _ref.style,
      onClick = _ref.onClick;
  var themeContext = useContext(ThemeContext);
  var processedClassName = "rds-tag " + (className || '') + " " + (variant || '') + " " + (onClick ? 'hoverable' : '');

  var getTag = function getTag() {
    return /*#__PURE__*/React.createElement(StyledTagContent, {
      style: onClick ? {
        cursor: 'pointer'
      } : {},
      themeContext: themeContext,
      variant: variant
    }, children);
  };

  return /*#__PURE__*/React.createElement(StyledTag, {
    themeContext: themeContext,
    variant: variant,
    className: processedClassName,
    style: style,
    onClick: onClick
  }, getTag());
};

var Tag$1 = React.memo(Tag);

function _templateObject2$2() {
  var data = _taggedTemplateLiteralLoose(["\n    font-weight: 400;\n    font-size: 13px;\n    color: ", ";\n"]);

  _templateObject2$2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$c() {
  var data = _taggedTemplateLiteralLoose(["\n    color: ", ";\n"]);

  _templateObject$c = function _templateObject() {
    return data;
  };

  return data;
}

var getColorVariant = function getColorVariant(props) {
  if (props.variant === ThemeVariants.SECONDARY) {
    return props.themeContext.main;
  } else if (props.variant === ThemeVariants.ERROR) {
    return '#ffffff7a';
  } else {
    return props.themeContext.secondary;
  }
};

var StyledCodeLinePortion = styled.span(_templateObject$c(), function (props) {
  return getColorVariant(props);
});
var StyledCodeLine = styled.p(_templateObject2$2(), function (props) {
  return getColorVariant(props);
});

var CodeBlock = function CodeBlock(_ref) {
  var children = _ref.children,
      className = _ref.className;
  var themeContext = useContext(ThemeContext);

  var _useState = useState([]),
      codeLines = _useState[0],
      setCodeLines = _useState[1];

  var milisecs = new Date().getMilliseconds();
  var randomId = "code-" + Math.random() * milisecs;
  useEffect(function () {
    var codeEl = document.getElementById(randomId);
    var splitted = children.split('\n');

    if (splitted.length > 1) {
      codeEl.classList.add('rds-code_multiple-line');
    }

    var newCodeLines = [];
    splitted.forEach(function (s, i) {
      newCodeLines.push(s);
    });
    setCodeLines(newCodeLines);
  }, [children]);

  var handleCopy = function handleCopy() {
    var textArea = document.createElement('textarea');
    textArea.value = children;
    textArea.style.top = '-100%';
    textArea.style.left = '-100%';
    textArea.style.position = 'fixed';
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();
    textArea.setSelectionRange(0, 99999);
    document.execCommand('copy');
  };

  var getVariant = function getVariant(cl) {
    var trimmed = cl.trim();
    var variant;

    if (trimmed.substr(0, 2) === '<!' || trimmed.substr(0, 2) === '//') {
      variant = ThemeVariants.ERROR;
    } else if ((trimmed.substr(0, 1) === '<' || trimmed.substr(0, 1) === '>' || trimmed.substr(0, 2) === '/>') && trimmed.substr(1, 1) !== '!') {
      variant = ThemeVariants.SECONDARY;
    }

    return variant;
  };

  var highlightPortion = function highlightPortion(cl, portion) {
    var portionLine = cl.split(portion);

    if (portionLine.length > 1) {
      return /*#__PURE__*/React.createElement(StyledCodeLine, {
        themeContext: themeContext
      }, /*#__PURE__*/React.createElement(StyledCodeLinePortion, {
        themeContext: themeContext,
        variant: ThemeVariants.SECONDARY
      }, portion), /*#__PURE__*/React.createElement(StyledCodeLinePortion, {
        themeContext: themeContext
      }, portionLine[1]));
    }
  };

  var getContent = function getContent(cl) {
    var importPortion = highlightPortion(cl, 'import');

    if (importPortion) {
      return importPortion;
    }

    var npmPortion = highlightPortion(cl, 'npm');

    if (npmPortion) {
      return npmPortion;
    }

    var yarnPortion = highlightPortion(cl, 'yarn');

    if (yarnPortion) {
      return yarnPortion;
    }

    return cl;
  };

  return /*#__PURE__*/React.createElement(Card, {
    variant: ThemeVariants.DARK,
    className: "rds-code " + (className || '')
  }, /*#__PURE__*/React.createElement("code", {
    id: randomId
  }, codeLines.map(function (cl, i) {
    if ((!cl || !cl.length || cl === '                ') && i === codeLines.length - 1) {
      return null;
    }

    return /*#__PURE__*/React.createElement(StyledCodeLine, {
      themeContext: themeContext,
      key: i,
      variant: getVariant(cl)
    }, getContent(cl));
  })), /*#__PURE__*/React.createElement(Tag$1, {
    onClick: handleCopy,
    variant: TagVariants.DARK,
    className: "rds-code_copy"
  }, "Copy code"));
};

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n    ", "\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3$1() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject3$1 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$3() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n    ", "\n"]);

  _templateObject2$3 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$d() {
  var data = _taggedTemplateLiteralLoose(["\n    background-color: ", ";\n"]);

  _templateObject$d = function _templateObject() {
    return data;
  };

  return data;
}
var StyledMainBackground = styled.div(_templateObject$d(), function (props) {
  return props.themeContext.scheme === ThemesNames.DARK ? '#212121' : 'white';
});
var MainBackgroundDiv = function MainBackgroundDiv(_ref) {
  var id = _ref.id,
      children = _ref.children,
      className = _ref.className,
      style = _ref.style,
      align = _ref.align,
      onClick = _ref.onClick;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledMainBackground, {
    style: style,
    id: id,
    themeContext: themeContext,
    className: className,
    onClick: onClick,
    align: align
  }, children);
};
var StyledDarkBackgroundDiv = styled.div(_templateObject2$3(), function (props) {
  return darkBackgroundRule(props);
}, function (props) {
  return props.roundedBorder ? borderRadiusRule(props) : '';
});
var DarkDiv = function DarkDiv(_ref2) {
  var id = _ref2.id,
      children = _ref2.children,
      className = _ref2.className,
      style = _ref2.style,
      align = _ref2.align,
      onClick = _ref2.onClick,
      roundedBorder = _ref2.roundedBorder;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledDarkBackgroundDiv, {
    style: style,
    id: id,
    themeContext: themeContext,
    className: className,
    onClick: onClick,
    align: align,
    roundedBorder: roundedBorder
  }, children);
};
var StyledMainColorBackgroundDiv = styled.div(_templateObject3$1(), function (props) {
  return mainColorBackgroundRule(props);
});
var MainColorBGDiv = function MainColorBGDiv(_ref3) {
  var id = _ref3.id,
      children = _ref3.children,
      className = _ref3.className,
      style = _ref3.style,
      align = _ref3.align,
      onClick = _ref3.onClick;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledMainColorBackgroundDiv, {
    style: style,
    id: id,
    themeContext: themeContext,
    className: className,
    onClick: onClick,
    align: align
  }, children);
};
var StyledBlackBackground = styled.div(_templateObject4(), function (props) {
  return blackBackgroundRule(props);
}, function (props) {
  return props.roundedBorder ? borderRadiusRule(props) : '';
});
var BlackBackground = function BlackBackground(_ref4) {
  var id = _ref4.id,
      children = _ref4.children,
      className = _ref4.className,
      style = _ref4.style,
      align = _ref4.align,
      onClick = _ref4.onClick,
      roundedBorder = _ref4.roundedBorder;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledBlackBackground, {
    style: style,
    id: id,
    themeContext: themeContext,
    className: className,
    onClick: onClick,
    roundedBorder: roundedBorder,
    align: align
  }, children);
};

var Block = function Block(_ref) {
  var id = _ref.id,
      children = _ref.children,
      className = _ref.className,
      style = _ref.style,
      align = _ref.align,
      onClick = _ref.onClick,
      roundedBorder = _ref.roundedBorder,
      variant = _ref.variant;

  switch (variant) {
    case ThemeVariants.MAIN:
      return /*#__PURE__*/React.createElement(MainColorBGDiv, {
        id: id,
        children: children,
        className: className,
        style: style,
        align: align,
        onClick: onClick,
        roundedBorder: roundedBorder
      });

    case ThemeVariants.DARK:
      return /*#__PURE__*/React.createElement(BlackBackground, {
        id: id,
        children: children,
        className: className,
        style: style,
        align: align,
        onClick: onClick,
        roundedBorder: roundedBorder
      });

    case ThemeVariants.GRAY:
      return /*#__PURE__*/React.createElement(DarkDiv, {
        id: id,
        children: children,
        className: className,
        style: style,
        align: align,
        onClick: onClick,
        roundedBorder: roundedBorder
      });

    default:
      return /*#__PURE__*/React.createElement(MainBackgroundDiv, {
        id: id,
        children: children,
        className: className,
        style: style,
        align: align,
        onClick: onClick,
        roundedBorder: roundedBorder
      });
  }
};

var DeletedState = function DeletedState(_ref) {
  var title = _ref.title,
      message = _ref.message,
      centered = _ref.centered,
      link = _ref.link,
      alignLeft = _ref.alignLeft,
      style = _ref.style;
  return /*#__PURE__*/React.createElement("div", {
    className: "rds-state deleted " + (centered ? 'rds-centered' : ''),
    align: alignLeft ? '' : 'center',
    style: style
  }, /*#__PURE__*/React.createElement(Icon, {
    background: true,
    icon: Icons.BIN,
    width: 30,
    variant: ThemeVariants.SECONDARY
  }), /*#__PURE__*/React.createElement(Header, {
    size: HeaderSizes.SMALL,
    title: title || 'Unavailable',
    text: message || 'This item has been dropped'
  }, link ? /*#__PURE__*/React.createElement(Link, {
    to: link.url
  }, /*#__PURE__*/React.createElement(Tag$1, null, link.label)) : null));
};

var Emoji = function Emoji(_ref) {
  var title = _ref.title,
      type = _ref.type;
  return /*#__PURE__*/React.createElement("span", {
    className: "emoji",
    role: "img",
    "aria-label": title,
    title: title
  }, type);
};

var Emoji$1 = React.memo(Emoji);

var EmptyState = function EmptyState(_ref) {
  var title = _ref.title,
      message = _ref.message,
      centered = _ref.centered,
      alignLeft = _ref.alignLeft,
      style = _ref.style;
  return /*#__PURE__*/React.createElement("div", {
    className: "rds-state empty " + (centered ? 'rds-centered' : ''),
    align: alignLeft ? '' : 'center',
    style: style
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: Icons.EMPTY,
    background: true,
    variant: ThemeVariants.SECONDARY
  }), /*#__PURE__*/React.createElement(Header, {
    title: title,
    text: message,
    size: HeaderSizes.SMALL,
    alignCenter: !alignLeft
  }));
};

var ErrorState = function ErrorState(_ref) {
  var title = _ref.title,
      message = _ref.message,
      centered = _ref.centered,
      style = _ref.style,
      alignLeft = _ref.alignLeft;
  return /*#__PURE__*/React.createElement("div", {
    className: "rds-state " + (centered ? 'rds-centered' : ''),
    align: alignLeft ? '' : 'center',
    style: style
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: Icons.WARNING,
    background: true,
    width: 30,
    variant: ThemeVariants.SECONDARY
  }), /*#__PURE__*/React.createElement(Header, {
    size: HeaderSizes.SMALL,
    title: title,
    text: message,
    alignCenter: !alignLeft
  }));
};

function _templateObject$e() {
  var data = _taggedTemplateLiteralLoose(["\n    background: ", ";\n"]);

  _templateObject$e = function _templateObject() {
    return data;
  };

  return data;
}
var StyledIsoLogo = styled.div(_templateObject$e(), function (props) {
  return props.themeContext && "linear-gradient(-45deg, " + props.themeContext.main + " 30%, " + props.themeContext.secondary + " 65%)";
});

var Isologo = function Isologo(_ref) {
  var children = _ref.children,
      className = _ref.className,
      id = _ref.id;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledIsoLogo, {
    id: id,
    themeContext: themeContext,
    className: "rds-isologo " + className
  }, children);
};

var Loading = function Loading(_ref) {
  var tag = _ref.tag,
      fetching = _ref.fetching,
      className = _ref.className;

  var getAnimation = function getAnimation() {
    return /*#__PURE__*/React.createElement("div", {
      className: "loading"
    }, /*#__PURE__*/React.createElement(Isologo, null));
  };

  if (tag) return /*#__PURE__*/React.createElement("div", {
    className: (className || '') + " tagged-loading rds-flexbox align-center justify-center " + (fetching ? 'active' : '')
  }, getAnimation(), /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P
  }, tag));
  return getAnimation();
};

function _templateObject$f() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$f = function _templateObject() {
    return data;
  };

  return data;
}
var StyledProgressBar = styled.div(_templateObject$f(), function (props) {
  return "\n    background: linear-gradient(90deg, " + props.themeContext.main + ", " + props.themeContext.secondary + ");\n    " + borderRadiusRule(props) + "\n";
});

var ProgressBar = function ProgressBar(_ref) {
  var progress = _ref.progress,
      showPercentage = _ref.showPercentage;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'inline-block',
      minWidth: '250px'
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center direction-column"
  }, showPercentage ? /*#__PURE__*/React.createElement(Header, {
    title: progress + "%",
    text: "Please wait, we're working on it...",
    size: HeaderSizes.MEDIUM,
    alignCenter: true
  }) : null, /*#__PURE__*/React.createElement(DarkDiv, {
    roundedBorder: true,
    className: "progress-bar_wrapper rds-full-block rds-m_top__sm"
  }, /*#__PURE__*/React.createElement(StyledProgressBar, {
    themeContext: themeContext,
    className: "progress-bar",
    style: {
      width: progress + "%"
    }
  }))));
};

var FormActions = function FormActions(_ref) {
  var secondaryActions = _ref.secondaryActions,
      submitLabel = _ref.submitLabel,
      submitCallback = _ref.submitCallback;
  return /*#__PURE__*/React.createElement("section", {
    className: "rds-m_top__sm rds-full-block rds-flexbox align-center justify-center main-action-section",
    align: "center"
  }, secondaryActions ? /*#__PURE__*/React.createElement(ButtonGroup, {
    className: "form_btn-group"
  }, secondaryActions.map(function (action) {
    return /*#__PURE__*/React.createElement(Button, {
      key: action.label,
      variant: action.buttonVariant,
      onClick: action.callback,
      label: action.label,
      icon: action.buttonIcon
    });
  })) : null, /*#__PURE__*/React.createElement(Button, {
    variant: ButtonVariants.MAIN,
    label: submitLabel || 'Submit',
    onClick: submitCallback
  }));
};

var FormActions$1 = React.memo(FormActions);

var Form = function Form(_ref) {
  var children = _ref.children,
      className = _ref.className,
      submitCallback = _ref.submitCallback,
      secondaryActions = _ref.secondaryActions,
      submitLabel = _ref.submitLabel,
      doubleActionsUI = _ref.doubleActionsUI,
      submitProgress = _ref.submitProgress,
      title = _ref.title;

  var _useState = useState(false),
      loaded = _useState[0],
      setLoaded = _useState[1];

  var _useState2 = useState(false),
      submitting = _useState2[0],
      setSubmitting = _useState2[1];

  useEffect(function () {
    setTimeout(function () {
      return setLoaded(true);
    }, 1);
  }, []);

  var handleSubmit = function handleSubmit(e) {
    try {
      e.preventDefault();
      setSubmitting(true);
      return Promise.resolve(submitCallback()).then(function () {
        setSubmitting(false);
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  var submitClick = function submitClick() {
    var hiddenSubmitButton = document.getElementById('main-form-submit');
    hiddenSubmitButton.click();
  };

  if (!submitCallback) {
    return /*#__PURE__*/React.createElement(ComponentError$1, {
      componentName: "Form",
      errorMessage: "A 'submitCallback' prop is needed"
    });
  }

  return /*#__PURE__*/React.createElement("form", {
    className: "rds-form " + (className || '') + " " + (loaded ? 'loaded' : 'unloaded'),
    onSubmit: handleSubmit
  }, title ? /*#__PURE__*/React.createElement(Header, {
    title: title,
    size: HeaderSizes.MEDIUM
  }) : null, submitting ? /*#__PURE__*/React.createElement("div", {
    className: "rds-full-block rds-m_top " + className,
    align: "center"
  }, submitProgress !== null && submitProgress !== undefined ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProgressBar, {
    progress: submitProgress,
    showPercentage: true
  })) : /*#__PURE__*/React.createElement(Loading, null)) : doubleActionsUI && /*#__PURE__*/React.createElement(FormActions$1, {
    submitLabel: submitLabel,
    submitCallback: submitClick,
    secondaryActions: secondaryActions
  }), /*#__PURE__*/React.createElement("section", {
    className: "rds-form_content rds-full-block rds-flexbox align-top justify-evenly " + (doubleActionsUI ? 'rds-m_top__md' : ''),
    style: submitting ? {
      display: 'none'
    } : null
  }, children), !submitting ? /*#__PURE__*/React.createElement(FormActions$1, {
    submitLabel: submitLabel,
    submitCallback: submitClick,
    secondaryActions: secondaryActions
  }) : null, /*#__PURE__*/React.createElement("input", {
    id: "main-form-submit",
    type: "submit",
    style: {
      display: 'none'
    }
  }));
};

function _templateObject$g() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n    ", "\n    text-transform: uppercase;\n    font-size: 0.6rem;\n    font-weight: 700;\n    transition: 0.2s color;\n"]);

  _templateObject$g = function _templateObject() {
    return data;
  };

  return data;
}
var StyledLabel = styled.label(_templateObject$g(), function (props) {
  return labelColorRule(props);
}, function (props) {
  return props.active ? "color: " + props.themeContext.main + ";" : '';
});

var Label = function Label(_ref) {
  var className = _ref.className,
      active = _ref.active,
      children = _ref.children,
      align = _ref.align,
      variant = _ref.variant;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledLabel, {
    className: className,
    align: align,
    active: active,
    themeContext: themeContext,
    variant: variant
  }, children);
};

var SelectOption = function SelectOption(_ref) {
  var value = _ref.value,
      currentValue = _ref.currentValue,
      onSelect = _ref.onSelect,
      cardsUI = _ref.cardsUI;

  var _useState = useState(false),
      active = _useState[0],
      setActive = _useState[1];

  var currentValueSelect = useRef(false);
  useEffect(function () {
    if (active && !currentValueSelect.current) {
      currentValueSelect.current = true;
      onSelect(value.id);
    }
  }, [active]);
  useEffect(function () {
    if (currentValue !== null && currentValue.toString() === value.id.toString()) {
      setActive(true);
    } else {
      setActive(false);
    }
  }, [value, currentValue]);

  if (cardsUI) {
    return /*#__PURE__*/React.createElement(Card, {
      title: value.id,
      className: "form-custom-select_option",
      onClick: function onClick() {
        return onSelect(value.id);
      },
      variant: active ? ThemeVariants.DARK : null
    }, /*#__PURE__*/React.createElement(Header, {
      title: value.label,
      text: value.description,
      variant: active ? ThemeVariants.WHITE : null,
      size: HeaderSizes.XSMALL
    }));
  }

  return /*#__PURE__*/React.createElement(Tag$1, {
    className: "form-custom-select_option",
    key: value.label,
    title: value.id,
    variant: active ? null : TagVariants.TRANSPARENT,
    onClick: function onClick() {
      return onSelect(value.id);
    }
  }, value.label);
};

var Select = function Select(_ref2) {
  var id = _ref2.id,
      values = _ref2.values,
      currentValue = _ref2.currentValue,
      onSelect = _ref2.onSelect,
      cardsUI = _ref2.cardsUI;

  if (!values) {
    return /*#__PURE__*/React.createElement(ComponentError$1, {
      componentName: "Select",
      errorMessage: "A \"values\" prop is needed"
    });
  }

  return /*#__PURE__*/React.createElement(DarkDiv, {
    roundedBorder: true,
    id: id,
    className: "form_select " + (cardsUI ? "rds-full-block rds-grid rds-grid_" + values.length + "-columns" : 'rounded-border_full'),
    style: cardsUI ? {
      padding: '5px'
    } : null
  }, values.map(function (value, i) {
    return /*#__PURE__*/React.createElement(SelectOption, {
      key: i,
      value: value,
      currentValue: currentValue,
      onSelect: onSelect,
      cardsUI: cardsUI
    });
  }));
};

var Select$1 = React.memo(Select);

function _templateObject$h() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n    ", "\n    ", "\n    transition: 0.2s background-color;\n"]);

  _templateObject$h = function _templateObject() {
    return data;
  };

  return data;
}
var StyledInput = styled.input(_templateObject$h(), function (props) {
  return darkBackgroundRule(props);
}, function (props) {
  return colorRule(props);
}, function (props) {
  return borderRadiusRule(props);
});

var Input = function Input(_ref) {
  var id = _ref.id,
      style = _ref.style,
      className = _ref.className,
      onClick = _ref.onClick,
      onChange = _ref.onChange,
      type = _ref.type,
      min = _ref.min,
      value = _ref.value,
      minLength = _ref.minLength,
      required = _ref.required,
      placeholder = _ref.placeholder,
      children = _ref.children,
      onBlur = _ref.onBlur,
      onFocus = _ref.onFocus;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledInput, {
    themeContext: themeContext,
    style: style,
    id: id,
    className: className || '',
    onClick: onClick,
    onChange: onChange,
    type: type,
    min: min,
    value: value,
    minLength: minLength,
    required: required,
    placeholder: placeholder,
    children: children,
    onBlur: onBlur,
    onFocus: onFocus
  });
};

function _templateObject$i() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n    ", "\n    ", "\n"]);

  _templateObject$i = function _templateObject() {
    return data;
  };

  return data;
}
var StyledTextarea = styled.textarea(_templateObject$i(), function (props) {
  return darkBackgroundRule(props);
}, function (props) {
  return colorRule(props);
}, function (props) {
  return borderRadiusRule(props);
});

var Textarea = function Textarea(_ref) {
  var id = _ref.id,
      onChange = _ref.onChange,
      onFocus = _ref.onFocus,
      onBlur = _ref.onBlur,
      required = _ref.required,
      placeholder = _ref.placeholder,
      value = _ref.value,
      className = _ref.className;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledTextarea, {
    themeContext: themeContext,
    autoComplete: "off",
    id: id,
    onChange: onChange,
    onFocus: onFocus,
    onBlur: onBlur,
    required: required,
    value: value,
    placeholder: placeholder,
    className: className || ''
  });
};

var FilesPickerFile = function FilesPickerFile(_ref) {
  var fileData = _ref.fileData,
      removeCallback = _ref.removeCallback;
  return /*#__PURE__*/React.createElement(Block, {
    className: "rds-files-picker_file",
    roundedBorder: true,
    variant: ThemeVariants.GRAY
  }, /*#__PURE__*/React.createElement(Button, {
    className: "rds-files-picker_file-actions-btn",
    icon: Icons.BIN,
    variant: ButtonVariants.DANGER,
    onClick: removeCallback
  }), fileData.file.type.includes('image') ? /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("img", {
    className: "rds-files-picker_file-preview-shadow",
    src: fileData.preview,
    alt: fileData.filename,
    title: fileData.filename
  }), /*#__PURE__*/React.createElement("img", {
    className: "rds-files-picker_file-preview",
    src: fileData.preview,
    alt: fileData.filename,
    title: fileData.filename
  })) : /*#__PURE__*/React.createElement(Card, {
    className: "rds-files-picker_file-preview",
    headerTitle: fileData.filename,
    headerText: fileData.file.type,
    headerSize: HeaderSizes.XSMALL
  }));
};

var FilesPicker = function FilesPicker(_ref) {
  var accept = _ref.accept,
      uploadLabel = _ref.uploadLabel,
      multiple = _ref.multiple,
      initialFiles = _ref.initialFiles,
      onChange = _ref.onChange,
      onRemove = _ref.onRemove;

  var _useState = useState(initialFiles || []),
      files = _useState[0],
      setFiles = _useState[1];

  useEffect(function () {
    if (onChange) {
      onChange(files);
    }
  }, [files]);

  var handleFileSelect = function handleFileSelect(e) {
    if (e.target.files.length) {
      var currentFile = e.target.files[e.target.files.length - 1];
      var formattedFile = {
        filename: currentFile.name,
        file: currentFile,
        preview: URL.createObjectURL(currentFile)
      };

      if (!multiple) {
        setFiles([formattedFile]);
        return;
      }

      setFiles([].concat(files, [formattedFile]));
    }
  };

  var handleAddFileClick = function handleAddFileClick() {
    return document.getElementById('pictures-picker-input').click();
  };

  var handleRemoveFileClick = function handleRemoveFileClick(fileRemoved) {
    setFiles(files.filter(function (f) {
      return f !== fileRemoved;
    }));

    if (onRemove) {
      onRemove(fileRemoved);
    }
  };

  return /*#__PURE__*/React.createElement("div", {
    className: "rds-m_top__sm"
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      whiteSpace: 'nowrap',
      overflowX: 'auto'
    }
  }, files.map(function (f, i) {
    return /*#__PURE__*/React.createElement(FilesPickerFile, {
      removeCallback: function removeCallback() {
        return handleRemoveFileClick(f);
      },
      fileData: f,
      key: i
    });
  })), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("input", {
    accept: accept,
    id: "pictures-picker-input",
    onChange: handleFileSelect,
    style: {
      display: 'none'
    },
    multiple: multiple ? 'multiple' : null,
    type: "file"
  }), /*#__PURE__*/React.createElement(Button, {
    icon: Icons.ADD,
    label: uploadLabel || 'Upload a file',
    onClick: handleAddFileClick
  })));
};

var MultiSelect = function MultiSelect(_ref) {
  var id = _ref.id,
      values = _ref.values,
      onSelect = _ref.onSelect,
      currentValue = _ref.currentValue;

  var _useState = useState(currentValue || []),
      actives = _useState[0],
      setActives = _useState[1];

  var setInitial = useRef(false);
  useEffect(function () {
    if (currentValue && !setInitial.current && currentValue !== actives) {
      setInitial.current = true;
      setActives(currentValue);
    }
  }, [currentValue]);

  var handleClick = function handleClick(valueId) {
    var newValues = [];

    if (!actives.includes(valueId)) {
      newValues = [].concat(actives, [valueId]);
    } else {
      newValues = actives.filter(function (a) {
        return a !== valueId;
      });
    }

    setActives(newValues);
    onSelect(newValues);
  };

  return /*#__PURE__*/React.createElement("div", {
    id: id
  }, values.map(function (v) {
    return /*#__PURE__*/React.createElement(Tag$1, {
      onClick: function onClick() {
        return handleClick(v.id);
      },
      variant: actives.includes(v.id) ? TagVariants.DARK : null,
      key: v.id
    }, v.label);
  }));
};

function _templateObject$j() {
  var data = _taggedTemplateLiteralLoose(["\n    position: absolute;\n    display: inline-flex !important;\n    padding: 2px 8px;\n    background-color: ", ";\n    color: white;\n    text-transform: initial;\n    font-weight: 400;\n    ", "\n    opacity: 0 !important;\n    transition: 0.2s all;\n    margin: 0 0 0 10px;\n    &.active {\n        opacity: 1 !important;\n    }\n    & .rds-icon {\n        margin: 0 8px 0 0;\n        width: 10px;\n        height: 10px;\n    }\n"]);

  _templateObject$j = function _templateObject() {
    return data;
  };

  return data;
}
var StyledTooltip = styled.span(_templateObject$j(), function (props) {
  return blackValue(props.themeContext);
}, function (props) {
  return borderRadiusRule(props);
});

var FormItem = function FormItem(_ref) {
  var accept = _ref.accept,
      align = _ref.align,
      currentValue = _ref.currentValue,
      children = _ref.children,
      id = _ref.id,
      label = _ref.label,
      onChange = _ref.onChange,
      onRemove = _ref.onRemove,
      onClick = _ref.onClick,
      placeholder = _ref.placeholder,
      required = _ref.required,
      size = _ref.size,
      type = _ref.type,
      values = _ref.values,
      value = _ref.value,
      tooltip = _ref.tooltip,
      uploadLabel = _ref.uploadLabel,
      errorMessage = _ref.errorMessage,
      minLength = _ref.minLength,
      multiple = _ref.multiple,
      className = _ref.className,
      style = _ref.style,
      min = _ref.min,
      icon = _ref.icon;
  var themeContext = useContext(ThemeContext);

  var _useState = useState(value),
      processedValue = _useState[0],
      setProcessedValue = _useState[1];

  var _useState2 = useState(null),
      currentOption = _useState2[0],
      setCurrentOption = _useState2[1];

  var _useState3 = useState(false),
      active = _useState3[0],
      setActive = _useState3[1];

  var _useState4 = useState(false),
      focusing = _useState4[0],
      setFocusing = _useState4[1];

  var _useState5 = useState(false),
      checkboxValue = _useState5[0],
      setCheckboxValue = _useState5[1];

  useEffect(function () {
    if (!value || value === processedValue) return;
    setProcessedValue(value);
  }, [value]);
  useEffect(function () {
    if (currentValue !== null && currentValue !== undefined) {
      setCurrentOption(currentValue);
      setCheckboxValue(currentValue);
    }
  }, [currentValue]);

  var handleSelect = function handleSelect(selectedValue) {
    setCurrentOption(selectedValue);
    onChange && onChange({
      target: {
        id: id,
        value: selectedValue
      }
    });
  };

  var handleDatePick = function handleDatePick(date) {
    if (onChange) {
      onChange({
        target: {
          id: id,
          value: date
        }
      });
    }
  };

  var handleCheckboxClick = function handleCheckboxClick() {
    onChange && onChange({
      target: {
        id: id,
        value: !checkboxValue
      }
    });
    setCheckboxValue(!checkboxValue);
  };

  var getFormItemType = function getFormItemType() {
    switch (type) {
      case FormItemTypes.MULTI_SELECT:
        return /*#__PURE__*/React.createElement(MultiSelect, {
          id: id,
          onSelect: function onSelect(valueId) {
            return handleSelect(valueId);
          },
          values: values,
          currentValue: currentOption
        });

      case FormItemTypes.SELECT:
        return /*#__PURE__*/React.createElement(Select$1, {
          values: values,
          currentValue: currentOption,
          id: id,
          onSelect: function onSelect(valueId) {
            return handleSelect(valueId);
          }
        });

      case FormItemTypes.CARD_SELECT:
        return /*#__PURE__*/React.createElement(Select$1, {
          values: values,
          currentValue: currentOption,
          id: id,
          onSelect: function onSelect(valueId) {
            return handleSelect(valueId);
          },
          cardsUI: true
        });

      case FormItemTypes.FILES_PICKER:
        return /*#__PURE__*/React.createElement(FilesPicker, {
          accept: accept,
          label: label,
          uploadLabel: uploadLabel,
          multiple: multiple,
          initialFiles: currentValue,
          onChange: onChange,
          onRemove: onRemove
        });

      case FormItemTypes.DATE_PICKER:
        return /*#__PURE__*/React.createElement(Block, {
          variant: ThemeVariants.GRAY,
          roundedBorder: true,
          className: "rds-flexbox"
        }, /*#__PURE__*/React.createElement(DatePicker, {
          id: id,
          selected: value || null,
          onChange: handleDatePick,
          autoComplete: "off",
          className: "rds-flexbox"
        }));

      case FormItemTypes.CHECKBOX:
        return /*#__PURE__*/React.createElement(Block, {
          variant: ThemeVariants.GRAY,
          className: "rounded-border_full form-item_checkbox " + (checkboxValue ? 'active' : ''),
          onClick: handleCheckboxClick
        }, /*#__PURE__*/React.createElement(Icon, {
          icon: Icons.SUCCESS,
          variant: ThemeVariants.MAIN,
          filled: true
        }));

      case FormItemTypes.TEXTAREA:
        return /*#__PURE__*/React.createElement(Textarea, {
          id: id,
          className: className,
          onClick: onClick,
          onChange: onChange,
          type: type,
          min: min,
          value: value,
          minLength: minLength,
          required: required,
          placeholder: placeholder,
          children: children,
          onFocus: function onFocus() {
            return setActive(true);
          },
          onBlur: function onBlur() {
            return setActive(false);
          }
        });

      default:
        return /*#__PURE__*/React.createElement(Input, {
          id: id,
          className: className,
          onClick: onClick,
          onChange: onChange,
          type: type,
          min: min,
          value: value,
          minLength: minLength,
          required: required,
          placeholder: placeholder,
          children: children,
          onBlur: function onBlur() {
            return setActive(false);
          },
          onFocus: function onFocus() {
            return setActive(true);
          }
        });
    }
  };

  return /*#__PURE__*/React.createElement("div", {
    style: style,
    align: align,
    className: "form-item rds-m_top__md rds-full-block " + (size || ''),
    onMouseOver: function onMouseOver() {
      return setActive(true);
    },
    onMouseLeave: function onMouseLeave() {
      return !focusing && setActive(false);
    },
    onFocus: function onFocus() {
      return setFocusing(true);
    },
    onBlur: function onBlur() {
      return setFocusing(false);
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: icon ? 'rds-flexbox align-center' : null
  }, icon ? /*#__PURE__*/React.createElement(Icon, {
    className: "form-item_icon " + (active ? 'active' : null),
    icon: icon,
    width: 13
  }) : null, /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox direction-column"
  }, /*#__PURE__*/React.createElement(Label, {
    className: tooltip ? "form-item_label " + (active ? 'active' : null) : '',
    active: active
  }, label, tooltip && /*#__PURE__*/React.createElement(StyledTooltip, {
    themeContext: themeContext,
    className: "form-item_tooltip rds-flexbox align-center " + (active ? 'active' : '')
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: Icons.VIEW,
    variant: ThemeVariants.WHITE,
    width: 10
  }), ' ', tooltip)))), /*#__PURE__*/React.createElement("div", {
    className: label ? 'rds-m_top__sm' : ''
  }, children || getFormItemType()), errorMessage && errorMessage.target && errorMessage.target === id && /*#__PURE__*/React.createElement(Card, {
    style: {
      "float": 'left',
      width: '100%',
      padding: '6px 20px',
      margin: '10px 0 0 0'
    },
    variant: ThemeVariants.ERROR
  }, /*#__PURE__*/React.createElement(Header, {
    title: errorMessage.message,
    variant: ThemeVariants.ERROR,
    size: HeaderSizes.XSMALL
  })));
};

var FormSection = function FormSection(_ref) {
  var children = _ref.children,
      size = _ref.size,
      title = _ref.title,
      description = _ref.description;
  return /*#__PURE__*/React.createElement("div", {
    className: "form-section " + size
  }, /*#__PURE__*/React.createElement(Card, {
    style: {
      margin: '0 0 15px 0',
      width: '100%'
    }
  }, title ? /*#__PURE__*/React.createElement(Header, {
    title: title,
    text: description,
    size: HeaderSizes.SMALL
  }) : null, /*#__PURE__*/React.createElement("div", null, children)));
};

function _templateObject$k() {
  var data = _taggedTemplateLiteralLoose(["\n    background-color: ", ";\n    ", "\n    &:hover {\n        background-color: ", ";\n    }\n"]);

  _templateObject$k = function _templateObject() {
    return data;
  };

  return data;
}
var StyledReportBar = styled.div(_templateObject$k(), function (props) {
  return props.themeContext.main;
}, function (props) {
  return borderRadiusRule(props);
}, function (props) {
  return hexDecrement(props.themeContext.main, 50);
});

var Graph$1 = function Graph(_ref) {
  var values = _ref.values,
      biggestValue = _ref.biggestValue,
      mainFieldName = _ref.mainFieldName,
      itemFieldName = _ref.itemFieldName,
      itemDescriptionFieldName = _ref.itemDescriptionFieldName,
      yPrefix = _ref.yPrefix;
  var themeContext = useContext(ThemeContext);

  if (!values || !mainFieldName || !itemFieldName || !biggestValue) {
    return /*#__PURE__*/React.createElement(ComponentError$1, {
      componentName: "Graph",
      errorMessage: /*#__PURE__*/React.createElement(React.Fragment, null, "An ", /*#__PURE__*/React.createElement("b", null, "array of values"), ", a ", /*#__PURE__*/React.createElement("b", null, "main field name"), " and an ", /*#__PURE__*/React.createElement("b", null, "item field name"), " are needed")
    });
  }

  return /*#__PURE__*/React.createElement("article", null, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Label, null, mainFieldName)), /*#__PURE__*/React.createElement("div", {
    style: {
      minHeight: '300px',
      gridTemplateColumns: 'auto auto',
      marginBottom: '100px'
    },
    className: "rds-grid rds-m_top__md"
  }, /*#__PURE__*/React.createElement("div", {
    className: "rds-full-block rds-flexbox direction-column justify-between",
    style: {
      height: '100%',
      width: 'max-content'
    },
    align: "right"
  }, /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center justify-between"
  }, /*#__PURE__*/React.createElement(Tag$1, null, (yPrefix || '') + " " + biggestValue), /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P
  }, "-")), /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center justify-between"
  }, /*#__PURE__*/React.createElement(Tag$1, null, (yPrefix || '') + " " + Math.round(biggestValue / 1.5)), /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P
  }, "-")), /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center justify-between"
  }, /*#__PURE__*/React.createElement(Tag$1, null, (yPrefix || '') + " " + Math.round(biggestValue / 2)), /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P
  }, "-")), /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center justify-between"
  }, /*#__PURE__*/React.createElement(Tag$1, null, (yPrefix || '') + " " + Math.round(biggestValue / 3)), /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P
  }, "-")), /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center justify-between"
  }, /*#__PURE__*/React.createElement(Tag$1, null, (yPrefix || '') + " 0"), /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.P
  }, "-"))), /*#__PURE__*/React.createElement("div", {
    className: "reports_bars rds-flexbox"
  }, values.map(function (v) {
    return /*#__PURE__*/React.createElement("article", {
      key: v[mainFieldName],
      className: "reports_bar-section rds-grid",
      align: "center"
    }, /*#__PURE__*/React.createElement(DarkDiv, {
      roundedBorder: true,
      className: "reports_bar-wrapper rds-flexbox"
    }, /*#__PURE__*/React.createElement(StyledReportBar, {
      className: "reports_bar",
      themeContext: themeContext,
      style: {
        height: v[mainFieldName] / biggestValue * 100 + "%"
      }
    }, /*#__PURE__*/React.createElement(BlackBackground, {
      roundedBorder: true,
      className: "reports_bar_detail-panel"
    }, /*#__PURE__*/React.createElement(Header, {
      variant: ThemeVariants.WHITE,
      title: (yPrefix || '') + " " + v[mainFieldName],
      size: HeaderSizes.XSMALL
    })))), /*#__PURE__*/React.createElement("div", {
      className: "rds-m_top__md",
      style: {
        padding: '5px'
      }
    }, /*#__PURE__*/React.createElement(Header, {
      title: v[itemFieldName],
      size: HeaderSizes.SMALL
    }), /*#__PURE__*/React.createElement(Typography$1, {
      type: TypographyTypes.P
    }, v[itemDescriptionFieldName])));
  }))));
};

var Logo = function Logo() {
  return /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.H1,
    className: "rds-logo rds-flexbox align-center"
  }, /*#__PURE__*/React.createElement(Isologo, {
    className: "isologo"
  }), /*#__PURE__*/React.createElement("span", null, "reango"));
};

var NoImage = React.memo(function (_ref) {
  var width = _ref.width,
      alignLeft = _ref.alignLeft,
      title = _ref.title,
      message = _ref.message;

  var _useState = useState(null),
      value = _useState[0],
      setValue = _useState[1];

  useEffect(function () {
    var processedWidth = 30;

    if (width) {
      processedWidth = width;
    }

    setValue(processedWidth);
  }, [width]);
  return /*#__PURE__*/React.createElement("div", {
    className: "state item-img item-img_no-result"
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: Icons.PICTURE,
    width: value,
    background: true,
    variant: ThemeVariants.SECONDARY
  }), title ? /*#__PURE__*/React.createElement(Header, {
    title: title,
    text: message,
    size: HeaderSizes.SMALL,
    alignCenter: !alignLeft
  }) : null);
});

var Rater = function Rater(_ref) {
  var values = _ref.values,
      initial = _ref.initial,
      onChange = _ref.onChange,
      showLabel = _ref.showLabel,
      size = _ref.size,
      className = _ref.className,
      id = _ref.id;

  var _useState = useState(initial || 2),
      currentRate = _useState[0],
      setCurrentRate = _useState[1];

  var handleClick = function handleClick(value) {
    onChange(value);
    setCurrentRate(value);
  };

  if (!values) {
    return /*#__PURE__*/React.createElement(ComponentError$1, {
      componentName: "Rater",
      errorMessage: "A \"values\" prop needs to be provided"
    });
  }

  return /*#__PURE__*/React.createElement("div", {
    className: "rds-rate " + (className || ''),
    id: id
  }, showLabel ? /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Typography$1, {
    type: TypographyTypes.H3
  }, values[currentRate])) : null, /*#__PURE__*/React.createElement("div", {
    className: " rds-flexbox align-center"
  }, values.map(function (s, i) {
    return /*#__PURE__*/React.createElement("div", {
      key: i,
      onClick: onChange ? function () {
        return handleClick(i);
      } : null,
      className: "rds-rate_selector-item " + (onChange ? 'rds-rate_selector-item_interactive' : '') + " " + (currentRate >= i ? 'active' : '')
    }, /*#__PURE__*/React.createElement(Icon, {
      icon: Icons.STAR,
      filled: currentRate >= i,
      width: size === FormItemSizes.BIG ? 30 : null
    }));
  })));
};

function _templateObject$l() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$l = function _templateObject() {
    return data;
  };

  return data;
}
var StyledTableItem = styled.article(_templateObject$l(), function (props) {
  return "\n    width: 100%;\n    display: block;\n    padding: 10px 0;\n    border-bottom: " + borderWidthValue() + " " + (props.noLine ? 'transparent' : borderColorValue(props)) + " solid;\n";
});

var TableItem = function TableItem(_ref) {
  var className = _ref.className,
      id = _ref.id,
      children = _ref.children,
      noLine = _ref.noLine;
  var themeContext = useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledTableItem, {
    className: className,
    id: id,
    themeContext: themeContext,
    noLine: noLine
  }, children);
};

function _templateObject$m() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "\n"]);

  _templateObject$m = function _templateObject() {
    return data;
  };

  return data;
}
var StyledTableImg = styled.img(_templateObject$m(), function (props) {
  return borderRadiusRule(props);
});

var Table = function Table(_ref) {
  var addRowAction = _ref.addRowAction,
      refreshAction = _ref.refreshAction,
      className = _ref.className,
      title = _ref.title,
      description = _ref.description,
      columnNames = _ref.columnNames,
      rows = _ref.rows,
      fetching = _ref.fetching;

  var _useState = useState(false),
      imgError = _useState[0],
      setImgError = _useState[1];

  var getNestedValue = function getNestedValue(item, fieldPath) {
    var value;
    var splitted = fieldPath.split('.');
    splitted.forEach(function (split, i) {
      value = i === 0 ? item[split] : value ? value[split] : null;
    });
    return value;
  };

  var getRowValue = function getRowValue(item, columnName) {
    var options = columnName.options;
    var formattedValue;
    var jsxValue;

    if (columnName.fieldName.includes('.')) {
      formattedValue = getNestedValue(item, columnName.fieldName);
    } else {
      if (columnName.fieldName && item[columnName.fieldName] && typeof item[columnName.fieldName] === 'object') {
        formattedValue = item[columnName.fieldName].length !== null && item[columnName.fieldName].length !== undefined ? item[columnName.fieldName].length : "In order to use object properties, use '<object>.<property>' to access the value.";
      } else {
        formattedValue = item[columnName.fieldName];
      }
    }

    if (!options) {
      return /*#__PURE__*/React.createElement(Typography$1, {
        type: TypographyTypes.P
      }, formattedValue);
    }

    var _boolean = options["boolean"],
        image = options.image,
        dateValue = options.dateValue,
        prefix = options.prefix,
        suffix = options.suffix,
        tagged = options.tagged,
        link = options.link,
        action = options.action;

    if (dateValue) {
      formattedValue = new Date(formattedValue).toLocaleDateString() + " at " + new Date(formattedValue).toLocaleTimeString() + " \uD83D\uDCC5";
    }

    if (prefix) {
      formattedValue = prefix + ' ' + formattedValue;
    }

    if (suffix) {
      formattedValue = formattedValue + ' ' + suffix;
    }

    jsxValue = formattedValue;

    if (_boolean) {
      jsxValue = jsxValue ? _boolean.values["true"] : _boolean.values["false"];
    }

    if (image) {
      return !imgError && formattedValue ? /*#__PURE__*/React.createElement(StyledTableImg, {
        onClick: function onClick() {
          return action && action(item);
        },
        className: "table_img",
        src: formattedValue,
        alt: "",
        onError: function onError() {
          return setImgError(true);
        }
      }) : /*#__PURE__*/React.createElement(NoImage, {
        width: 30
      });
    }

    if (tagged) {
      jsxValue = /*#__PURE__*/React.createElement(Tag$1, {
        onClick: action ? function () {
          return action(item);
        } : null,
        style: _boolean && _boolean.falseState && _boolean.values["false"] && !formattedValue ? {
          filter: 'grayscale(1)',
          opacity: '0.7'
        } : null,
        className: link ? 'hoverable' : null,
        variant: !_boolean || !_boolean.falseState || formattedValue !== false ? tagged.dynamicVariant ? tagged.dynamicVariant(formattedValue) : tagged.variant : null
      }, jsxValue);
    } else {
      jsxValue = /*#__PURE__*/React.createElement(Typography$1, {
        type: TypographyTypes.P
      }, formattedValue);
    }

    if (link && link.recordFieldName) {
      var formattedLinkValue = item[link.recordFieldName];

      if (link.recordFieldName.includes('.')) {
        formattedLinkValue = getNestedValue(item, link.recordFieldName);
      }

      jsxValue = /*#__PURE__*/React.createElement(Link, {
        onClick: !tagged && action ? function () {
          return action(item);
        } : null,
        to: "" + link.base + formattedLinkValue
      }, jsxValue);
    }

    return jsxValue;
  };

  if (!columnNames) {
    return /*#__PURE__*/React.createElement(ComponentError$1, {
      componentName: "Table",
      errorMessage: "The 'columnNames' prop is required"
    });
  }

  if (columnNames.length > 6) {
    return /*#__PURE__*/React.createElement(ErrorState, {
      title: "Table error",
      message: "There's a maximum of 6 columns."
    });
  }

  return /*#__PURE__*/React.createElement(Card, {
    className: "rds-table " + className
  }, title || addRowAction || refreshAction ? /*#__PURE__*/React.createElement("div", {
    className: "table_header rds-flexbox align-center justify-between"
  }, title ? /*#__PURE__*/React.createElement(Header, {
    title: title,
    text: description,
    size: HeaderSizes.SMALL
  }) : null, /*#__PURE__*/React.createElement("div", {
    className: "rds-flexbox align-center"
  }, addRowAction ? /*#__PURE__*/React.createElement(Link, {
    to: addRowAction.link
  }, /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(Button, {
    variant: ButtonVariants.ADD,
    label: addRowAction.label
  }))) : null, refreshAction ? /*#__PURE__*/React.createElement(ButtonGroup, {
    style: {
      margin: '0 0 0 10px'
    }
  }, /*#__PURE__*/React.createElement(Button, {
    variant: ButtonVariants.RESTORE,
    onClick: refreshAction
  })) : null)) : null, /*#__PURE__*/React.createElement("div", {
    className: "rds-table_column-headers rds-full-block " + (title ? '' : '') + " rds-grid rds-table_grid_" + columnNames.length + "-column" + (columnNames.length > 1 ? 's' : '')
  }, columnNames.map(function (columnName, i) {
    return /*#__PURE__*/React.createElement("div", {
      key: i
    }, /*#__PURE__*/React.createElement(Label, null, columnName.label));
  })), fetching ? /*#__PURE__*/React.createElement("div", {
    className: "rds-full-block rds-m_top__md",
    align: "center"
  }, /*#__PURE__*/React.createElement(Loading, {
    tag: "Fetching data..."
  })) : /*#__PURE__*/React.createElement(DarkDiv, {
    className: "rds-full-block rds-m_top__sm"
  }, /*#__PURE__*/React.createElement(Card, {
    className: "rds-full-block table_content"
  }, rows.length ? rows.map(function (item, i) {
    return /*#__PURE__*/React.createElement(TableItem, {
      key: i,
      noLine: i === rows.length - 1,
      className: "rds-grid rds-table_grid_" + columnNames.length + "-columns rds-flexbox align-top"
    }, columnNames.map(function (columnName, i) {
      return /*#__PURE__*/React.createElement("div", {
        key: i
      }, getRowValue(item, columnName));
    }));
  }) : /*#__PURE__*/React.createElement(EmptyState, {
    title: "Nothing here"
  }))));
};

export { Block, Breadcrumbs, Button, ButtonGroup, ButtonVariants, Card, CodeBlock, DeletedState, Emoji$1 as Emoji, EmojiTypes, EmptyState, ErrorState, Form, FormItem, FormItemSizes, FormItemTypes, FormSection, FormSectionSizes, Graph$1 as Graph, Header, HeaderSizes, Icon, Icons as IconTypes, Input, Isologo, Label, Loading, Logo, NoImage, ProgressBar, Rater, Table, TableItem, Tag$1 as Tag, TagVariants, Textarea, ThemeVariants, Themes, ThemesNames, Typography$1 as Typography, TypographyTypes };
//# sourceMappingURL=index.modern.js.map
